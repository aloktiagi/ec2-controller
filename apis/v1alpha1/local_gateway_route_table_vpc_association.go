// Copyright Amazon.com Inc. or its affiliates. All Rights Reserved.
//
// Licensed under the Apache License, Version 2.0 (the "License"). You may
// not use this file except in compliance with the License. A copy of the
// License is located at
//
//     http://aws.amazon.com/apache2.0/
//
// or in the "license" file accompanying this file. This file is distributed
// on an "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either
// express or implied. See the License for the specific language governing
// permissions and limitations under the License.

// Code generated by ack-generate. DO NOT EDIT.

package v1alpha1

import (
	ackv1alpha1 "github.com/aws-controllers-k8s/runtime/apis/core/v1alpha1"
	metav1 "k8s.io/apimachinery/pkg/apis/meta/v1"
)

// LocalGatewayRouteTableVPCAssociationSpec defines the desired state of LocalGatewayRouteTableVPCAssociation
type LocalGatewayRouteTableVPCAssociationSpec struct {
	DryRun *bool `json:"dryRun,omitempty"`
	// +kubebuilder:validation:Required
	LocalGatewayRouteTableID *string             `json:"localGatewayRouteTableID"`
	TagSpecifications        []*TagSpecification `json:"tagSpecifications,omitempty"`
	// +kubebuilder:validation:Required
	VPCID *string `json:"vpcID"`
}

// LocalGatewayRouteTableVPCAssociationStatus defines the observed state of LocalGatewayRouteTableVPCAssociation
type LocalGatewayRouteTableVPCAssociationStatus struct {
	// All CRs managed by ACK have a common `Status.ACKResourceMetadata` member
	// that is used to contain resource sync state, account ownership,
	// constructed ARN for the resource
	ACKResourceMetadata *ackv1alpha1.ResourceMetadata `json:"ackResourceMetadata"`
	// All CRS managed by ACK have a common `Status.Conditions` member that
	// contains a collection of `ackv1alpha1.Condition` objects that describe
	// the various terminal states of the CR and its backend AWS service API
	// resource
	Conditions                             []*ackv1alpha1.Condition `json:"conditions"`
	LocalGatewayID                         *string                  `json:"localGatewayID,omitempty"`
	LocalGatewayRouteTableARN              *string                  `json:"localGatewayRouteTableARN,omitempty"`
	LocalGatewayRouteTableVPCAssociationID *string                  `json:"localGatewayRouteTableVPCAssociationID,omitempty"`
	OwnerID                                *string                  `json:"ownerID,omitempty"`
	State                                  *string                  `json:"state,omitempty"`
	Tags                                   []*Tag                   `json:"tags,omitempty"`
}

// LocalGatewayRouteTableVPCAssociation is the Schema for the LocalGatewayRouteTableVPCAssociations API
// +kubebuilder:object:root=true
// +kubebuilder:subresource:status
type LocalGatewayRouteTableVPCAssociation struct {
	metav1.TypeMeta   `json:",inline"`
	metav1.ObjectMeta `json:"metadata,omitempty"`
	Spec              LocalGatewayRouteTableVPCAssociationSpec   `json:"spec,omitempty"`
	Status            LocalGatewayRouteTableVPCAssociationStatus `json:"status,omitempty"`
}

// LocalGatewayRouteTableVPCAssociationList contains a list of LocalGatewayRouteTableVPCAssociation
// +kubebuilder:object:root=true
type LocalGatewayRouteTableVPCAssociationList struct {
	metav1.TypeMeta `json:",inline"`
	metav1.ListMeta `json:"metadata,omitempty"`
	Items           []LocalGatewayRouteTableVPCAssociation `json:"items"`
}

func init() {
	SchemeBuilder.Register(&LocalGatewayRouteTableVPCAssociation{}, &LocalGatewayRouteTableVPCAssociationList{})
}
