// Copyright Amazon.com Inc. or its affiliates. All Rights Reserved.
//
// Licensed under the Apache License, Version 2.0 (the "License"). You may
// not use this file except in compliance with the License. A copy of the
// License is located at
//
//     http://aws.amazon.com/apache2.0/
//
// or in the "license" file accompanying this file. This file is distributed
// on an "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either
// express or implied. See the License for the specific language governing
// permissions and limitations under the License.

// Code generated by ack-generate. DO NOT EDIT.

package v1alpha1

import (
	ackv1alpha1 "github.com/aws-controllers-k8s/runtime/apis/core/v1alpha1"
	metav1 "k8s.io/apimachinery/pkg/apis/meta/v1"
)

// TrafficMirrorFilterRuleSpec defines the desired state of TrafficMirrorFilterRule
type TrafficMirrorFilterRuleSpec struct {
	ClientToken *string `json:"clientToken,omitempty"`
	Description *string `json:"description,omitempty"`
	// +kubebuilder:validation:Required
	DestinationCIDRBlock *string                        `json:"destinationCIDRBlock"`
	DestinationPortRange *TrafficMirrorPortRangeRequest `json:"destinationPortRange,omitempty"`
	DryRun               *bool                          `json:"dryRun,omitempty"`
	Protocol             *int64                         `json:"protocol,omitempty"`
	// +kubebuilder:validation:Required
	RuleAction *string `json:"ruleAction"`
	// +kubebuilder:validation:Required
	RuleNumber *int64 `json:"ruleNumber"`
	// +kubebuilder:validation:Required
	SourceCIDRBlock *string                        `json:"sourceCIDRBlock"`
	SourcePortRange *TrafficMirrorPortRangeRequest `json:"sourcePortRange,omitempty"`
	// +kubebuilder:validation:Required
	TrafficDirection *string `json:"trafficDirection"`
	// +kubebuilder:validation:Required
	TrafficMirrorFilterID *string `json:"trafficMirrorFilterID"`
}

// TrafficMirrorFilterRuleStatus defines the observed state of TrafficMirrorFilterRule
type TrafficMirrorFilterRuleStatus struct {
	// All CRs managed by ACK have a common `Status.ACKResourceMetadata` member
	// that is used to contain resource sync state, account ownership,
	// constructed ARN for the resource
	ACKResourceMetadata *ackv1alpha1.ResourceMetadata `json:"ackResourceMetadata"`
	// All CRS managed by ACK have a common `Status.Conditions` member that
	// contains a collection of `ackv1alpha1.Condition` objects that describe
	// the various terminal states of the CR and its backend AWS service API
	// resource
	Conditions              []*ackv1alpha1.Condition     `json:"conditions"`
	TrafficMirrorFilterRule *TrafficMirrorFilterRule_SDK `json:"trafficMirrorFilterRule,omitempty"`
}

// TrafficMirrorFilterRule is the Schema for the TrafficMirrorFilterRules API
// +kubebuilder:object:root=true
// +kubebuilder:subresource:status
type TrafficMirrorFilterRule struct {
	metav1.TypeMeta   `json:",inline"`
	metav1.ObjectMeta `json:"metadata,omitempty"`
	Spec              TrafficMirrorFilterRuleSpec   `json:"spec,omitempty"`
	Status            TrafficMirrorFilterRuleStatus `json:"status,omitempty"`
}

// TrafficMirrorFilterRuleList contains a list of TrafficMirrorFilterRule
// +kubebuilder:object:root=true
type TrafficMirrorFilterRuleList struct {
	metav1.TypeMeta `json:",inline"`
	metav1.ListMeta `json:"metadata,omitempty"`
	Items           []TrafficMirrorFilterRule `json:"items"`
}

func init() {
	SchemeBuilder.Register(&TrafficMirrorFilterRule{}, &TrafficMirrorFilterRuleList{})
}
