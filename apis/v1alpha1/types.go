// Copyright Amazon.com Inc. or its affiliates. All Rights Reserved.
//
// Licensed under the Apache License, Version 2.0 (the "License"). You may
// not use this file except in compliance with the License. A copy of the
// License is located at
//
//     http://aws.amazon.com/apache2.0/
//
// or in the "license" file accompanying this file. This file is distributed
// on an "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either
// express or implied. See the License for the specific language governing
// permissions and limitations under the License.

// Code generated by ack-generate. DO NOT EDIT.

package v1alpha1

import (
	metav1 "k8s.io/apimachinery/pkg/apis/meta/v1"
)

type AccountAttribute struct {
	AttributeName *string `json:"attributeName,omitempty"`
}

type AccountAttributeValue struct {
	AttributeValue *string `json:"attributeValue,omitempty"`
}

type ActiveInstance struct {
	InstanceID            *string `json:"instanceID,omitempty"`
	InstanceType          *string `json:"instanceType,omitempty"`
	SpotInstanceRequestID *string `json:"spotInstanceRequestID,omitempty"`
}

type AddPrefixListEntry struct {
	CIDR        *string `json:"cidr,omitempty"`
	Description *string `json:"description,omitempty"`
}

type Address struct {
	AllocationID            *string `json:"allocationID,omitempty"`
	AssociationID           *string `json:"associationID,omitempty"`
	CarrierIP               *string `json:"carrierIP,omitempty"`
	CustomerOwnedIP         *string `json:"customerOwnedIP,omitempty"`
	CustomerOwnedIPv4Pool   *string `json:"customerOwnedIPv4Pool,omitempty"`
	InstanceID              *string `json:"instanceID,omitempty"`
	NetworkBorderGroup      *string `json:"networkBorderGroup,omitempty"`
	NetworkInterfaceID      *string `json:"networkInterfaceID,omitempty"`
	NetworkInterfaceOwnerID *string `json:"networkInterfaceOwnerID,omitempty"`
	PrivateIPAddress        *string `json:"privateIPAddress,omitempty"`
	PublicIP                *string `json:"publicIP,omitempty"`
	PublicIPv4Pool          *string `json:"publicIPv4Pool,omitempty"`
	Tags                    []*Tag  `json:"tags,omitempty"`
}

type AllowedPrincipal struct {
	Principal *string `json:"principal,omitempty"`
}

type AssignedPrivateIPAddress struct {
	PrivateIPAddress *string `json:"privateIPAddress,omitempty"`
}

type AssociatedTargetNetwork struct {
	NetworkID   *string `json:"networkID,omitempty"`
	NetworkType *string `json:"networkType,omitempty"`
}

type AssociationStatus struct {
	Message *string `json:"message,omitempty"`
}

type AttributeBooleanValue struct {
	Value *bool `json:"value,omitempty"`
}

type AttributeValue struct {
	Value *string `json:"value,omitempty"`
}

type AuthorizationRule struct {
	AccessAll           *bool   `json:"accessAll,omitempty"`
	ClientVPNEndpointID *string `json:"clientVPNEndpointID,omitempty"`
	Description         *string `json:"description,omitempty"`
	DestinationCIDR     *string `json:"destinationCIDR,omitempty"`
	GroupID             *string `json:"groupID,omitempty"`
}

type AvailabilityZone struct {
	GroupName          *string `json:"groupName,omitempty"`
	NetworkBorderGroup *string `json:"networkBorderGroup,omitempty"`
	ParentZoneID       *string `json:"parentZoneID,omitempty"`
	ParentZoneName     *string `json:"parentZoneName,omitempty"`
	RegionName         *string `json:"regionName,omitempty"`
	ZoneID             *string `json:"zoneID,omitempty"`
	ZoneName           *string `json:"zoneName,omitempty"`
	ZoneType           *string `json:"zoneType,omitempty"`
}

type AvailabilityZoneMessage struct {
	Message *string `json:"message,omitempty"`
}

type AvailableCapacity struct {
	AvailableVCPUs *int64 `json:"availableVCPUs,omitempty"`
}

type BlockDeviceMapping struct {
	DeviceName  *string         `json:"deviceName,omitempty"`
	EBS         *EBSBlockDevice `json:"ebs,omitempty"`
	NoDevice    *string         `json:"noDevice,omitempty"`
	VirtualName *string         `json:"virtualName,omitempty"`
}

type BundleTask struct {
	BundleID   *string      `json:"bundleID,omitempty"`
	InstanceID *string      `json:"instanceID,omitempty"`
	Progress   *string      `json:"progress,omitempty"`
	StartTime  *metav1.Time `json:"startTime,omitempty"`
	UpdateTime *metav1.Time `json:"updateTime,omitempty"`
}

type BundleTaskError struct {
	Code    *string `json:"code,omitempty"`
	Message *string `json:"message,omitempty"`
}

type ByoipCIDR struct {
	CIDR          *string `json:"cidr,omitempty"`
	Description   *string `json:"description,omitempty"`
	StatusMessage *string `json:"statusMessage,omitempty"`
}

type CIDRAuthorizationContext struct {
	Message   *string `json:"message,omitempty"`
	Signature *string `json:"signature,omitempty"`
}

type CIDRBlock struct {
	CIDRBlock *string `json:"cidrBlock,omitempty"`
}

type CPUOptions struct {
	CoreCount      *int64 `json:"coreCount,omitempty"`
	ThreadsPerCore *int64 `json:"threadsPerCore,omitempty"`
}

type CPUOptionsRequest struct {
	CoreCount      *int64 `json:"coreCount,omitempty"`
	ThreadsPerCore *int64 `json:"threadsPerCore,omitempty"`
}

type CancelSpotFleetRequestsError struct {
	Message *string `json:"message,omitempty"`
}

type CancelSpotFleetRequestsErrorItem struct {
	SpotFleetRequestID *string `json:"spotFleetRequestID,omitempty"`
}

type CancelSpotFleetRequestsSuccessItem struct {
	SpotFleetRequestID *string `json:"spotFleetRequestID,omitempty"`
}

type CancelledSpotInstanceRequest struct {
	SpotInstanceRequestID *string `json:"spotInstanceRequestID,omitempty"`
}

type CapacityReservationGroup struct {
	GroupARN *string `json:"groupARN,omitempty"`
	OwnerID  *string `json:"ownerID,omitempty"`
}

type CapacityReservationOptions struct {
	UsageStrategy *string `json:"usageStrategy,omitempty"`
}

type CapacityReservationOptionsRequest struct {
	UsageStrategy *string `json:"usageStrategy,omitempty"`
}

type CapacityReservationSpecification struct {
	CapacityReservationPreference *string                    `json:"capacityReservationPreference,omitempty"`
	CapacityReservationTarget     *CapacityReservationTarget `json:"capacityReservationTarget,omitempty"`
}

type CapacityReservationSpecificationResponse struct {
	CapacityReservationPreference *string                            `json:"capacityReservationPreference,omitempty"`
	CapacityReservationTarget     *CapacityReservationTargetResponse `json:"capacityReservationTarget,omitempty"`
}

type CapacityReservationTarget struct {
	CapacityReservationID               *string `json:"capacityReservationID,omitempty"`
	CapacityReservationResourceGroupARN *string `json:"capacityReservationResourceGroupARN,omitempty"`
}

type CapacityReservationTargetResponse struct {
	CapacityReservationID               *string `json:"capacityReservationID,omitempty"`
	CapacityReservationResourceGroupARN *string `json:"capacityReservationResourceGroupARN,omitempty"`
}

type CapacityReservation_SDK struct {
	AvailabilityZone       *string      `json:"availabilityZone,omitempty"`
	AvailabilityZoneID     *string      `json:"availabilityZoneID,omitempty"`
	AvailableInstanceCount *int64       `json:"availableInstanceCount,omitempty"`
	CapacityReservationARN *string      `json:"capacityReservationARN,omitempty"`
	CapacityReservationID  *string      `json:"capacityReservationID,omitempty"`
	CreateDate             *metav1.Time `json:"createDate,omitempty"`
	EBSOptimized           *bool        `json:"ebsOptimized,omitempty"`
	EndDate                *metav1.Time `json:"endDate,omitempty"`
	EndDateType            *string      `json:"endDateType,omitempty"`
	EphemeralStorage       *bool        `json:"ephemeralStorage,omitempty"`
	InstanceMatchCriteria  *string      `json:"instanceMatchCriteria,omitempty"`
	InstancePlatform       *string      `json:"instancePlatform,omitempty"`
	InstanceType           *string      `json:"instanceType,omitempty"`
	OwnerID                *string      `json:"ownerID,omitempty"`
	State                  *string      `json:"state,omitempty"`
	Tags                   []*Tag       `json:"tags,omitempty"`
	Tenancy                *string      `json:"tenancy,omitempty"`
	TotalInstanceCount     *int64       `json:"totalInstanceCount,omitempty"`
}

type CarrierGateway_SDK struct {
	CarrierGatewayID *string `json:"carrierGatewayID,omitempty"`
	OwnerID          *string `json:"ownerID,omitempty"`
	State            *string `json:"state,omitempty"`
	Tags             []*Tag  `json:"tags,omitempty"`
	VPCID            *string `json:"vpcID,omitempty"`
}

type CertificateAuthentication struct {
	ClientRootCertificateChain *string `json:"clientRootCertificateChain,omitempty"`
}

type CertificateAuthenticationRequest struct {
	ClientRootCertificateChainARN *string `json:"clientRootCertificateChainARN,omitempty"`
}

type ClassicLinkDNSSupport struct {
	ClassicLinkDNSSupported *bool   `json:"classicLinkDNSSupported,omitempty"`
	VPCID                   *string `json:"vpcID,omitempty"`
}

type ClassicLinkInstance struct {
	Groups     []*GroupIdentifier `json:"groups,omitempty"`
	InstanceID *string            `json:"instanceID,omitempty"`
	Tags       []*Tag             `json:"tags,omitempty"`
	VPCID      *string            `json:"vpcID,omitempty"`
}

type ClassicLoadBalancer struct {
	Name *string `json:"name,omitempty"`
}

type ClientCertificateRevocationListStatus struct {
	Message *string `json:"message,omitempty"`
}

type ClientData struct {
	Comment     *string      `json:"comment,omitempty"`
	UploadEnd   *metav1.Time `json:"uploadEnd,omitempty"`
	UploadSize  *float64     `json:"uploadSize,omitempty"`
	UploadStart *metav1.Time `json:"uploadStart,omitempty"`
}

type ClientVPNAuthentication struct {
	ActiveDirectory         *DirectoryServiceAuthentication `json:"activeDirectory,omitempty"`
	FederatedAuthentication *FederatedAuthentication        `json:"federatedAuthentication,omitempty"`
	MutualAuthentication    *CertificateAuthentication      `json:"mutualAuthentication,omitempty"`
	Type                    *string                         `json:"type_,omitempty"`
}

type ClientVPNAuthenticationRequest struct {
	ActiveDirectory         *DirectoryServiceAuthenticationRequest `json:"activeDirectory,omitempty"`
	FederatedAuthentication *FederatedAuthenticationRequest        `json:"federatedAuthentication,omitempty"`
	MutualAuthentication    *CertificateAuthenticationRequest      `json:"mutualAuthentication,omitempty"`
	Type                    *string                                `json:"type_,omitempty"`
}

type ClientVPNAuthorizationRuleStatus struct {
	Message *string `json:"message,omitempty"`
}

type ClientVPNConnection struct {
	ClientIP                  *string `json:"clientIP,omitempty"`
	ClientVPNEndpointID       *string `json:"clientVPNEndpointID,omitempty"`
	CommonName                *string `json:"commonName,omitempty"`
	ConnectionEndTime         *string `json:"connectionEndTime,omitempty"`
	ConnectionEstablishedTime *string `json:"connectionEstablishedTime,omitempty"`
	ConnectionID              *string `json:"connectionID,omitempty"`
	EgressBytes               *string `json:"egressBytes,omitempty"`
	EgressPackets             *string `json:"egressPackets,omitempty"`
	IngressBytes              *string `json:"ingressBytes,omitempty"`
	IngressPackets            *string `json:"ingressPackets,omitempty"`
	Timestamp                 *string `json:"timestamp,omitempty"`
	Username                  *string `json:"username,omitempty"`
}

type ClientVPNConnectionStatus struct {
	Message *string `json:"message,omitempty"`
}

type ClientVPNEndpointStatus_SDK struct {
	Code    *string `json:"code,omitempty"`
	Message *string `json:"message,omitempty"`
}

type ClientVPNEndpoint_SDK struct {
	AssociatedTargetNetworks []*AssociatedTargetNetwork    `json:"associatedTargetNetworks,omitempty"`
	AuthenticationOptions    []*ClientVPNAuthentication    `json:"authenticationOptions,omitempty"`
	ClientCIDRBlock          *string                       `json:"clientCIDRBlock,omitempty"`
	ClientVPNEndpointID      *string                       `json:"clientVPNEndpointID,omitempty"`
	ConnectionLogOptions     *ConnectionLogResponseOptions `json:"connectionLogOptions,omitempty"`
	CreationTime             *string                       `json:"creationTime,omitempty"`
	DeletionTime             *string                       `json:"deletionTime,omitempty"`
	Description              *string                       `json:"description,omitempty"`
	DNSName                  *string                       `json:"dnsName,omitempty"`
	DNSServers               []*string                     `json:"dnsServers,omitempty"`
	SecurityGroupIDs         []*string                     `json:"securityGroupIDs,omitempty"`
	ServerCertificateARN     *string                       `json:"serverCertificateARN,omitempty"`
	SplitTunnel              *bool                         `json:"splitTunnel,omitempty"`
	Status                   *ClientVPNEndpointStatus_SDK  `json:"status,omitempty"`
	Tags                     []*Tag                        `json:"tags,omitempty"`
	TransportProtocol        *string                       `json:"transportProtocol,omitempty"`
	VPCID                    *string                       `json:"vpcID,omitempty"`
	VPNPort                  *int64                        `json:"vpnPort,omitempty"`
	VPNProtocol              *string                       `json:"vpnProtocol,omitempty"`
}

type ClientVPNRouteStatus_SDK struct {
	Code    *string `json:"code,omitempty"`
	Message *string `json:"message,omitempty"`
}

type ClientVPNRoute_SDK struct {
	ClientVPNEndpointID *string                   `json:"clientVPNEndpointID,omitempty"`
	Description         *string                   `json:"description,omitempty"`
	DestinationCIDR     *string                   `json:"destinationCIDR,omitempty"`
	Origin              *string                   `json:"origin,omitempty"`
	Status              *ClientVPNRouteStatus_SDK `json:"status,omitempty"`
	TargetSubnet        *string                   `json:"targetSubnet,omitempty"`
	Type                *string                   `json:"type_,omitempty"`
}

type CoipAddressUsage struct {
	AllocationID *string `json:"allocationID,omitempty"`
	AWSAccountID *string `json:"awsAccountID,omitempty"`
	AWSService   *string `json:"awsService,omitempty"`
	CoIP         *string `json:"coIP,omitempty"`
}

type CoipPool struct {
	LocalGatewayRouteTableID *string   `json:"localGatewayRouteTableID,omitempty"`
	PoolARN                  *string   `json:"poolARN,omitempty"`
	PoolCIDRs                []*string `json:"poolCIDRs,omitempty"`
	PoolID                   *string   `json:"poolID,omitempty"`
	Tags                     []*Tag    `json:"tags,omitempty"`
}

type ConnectionLogOptions struct {
	CloudwatchLogGroup  *string `json:"cloudwatchLogGroup,omitempty"`
	CloudwatchLogStream *string `json:"cloudwatchLogStream,omitempty"`
	Enabled             *bool   `json:"enabled,omitempty"`
}

type ConnectionLogResponseOptions struct {
	CloudwatchLogGroup  *string `json:"cloudwatchLogGroup,omitempty"`
	CloudwatchLogStream *string `json:"cloudwatchLogStream,omitempty"`
	Enabled             *bool   `json:"enabled,omitempty"`
}

type ConnectionNotification struct {
	ConnectionEvents            []*string `json:"connectionEvents,omitempty"`
	ConnectionNotificationARN   *string   `json:"connectionNotificationARN,omitempty"`
	ConnectionNotificationID    *string   `json:"connectionNotificationID,omitempty"`
	ConnectionNotificationState *string   `json:"connectionNotificationState,omitempty"`
	ConnectionNotificationType  *string   `json:"connectionNotificationType,omitempty"`
	ServiceID                   *string   `json:"serviceID,omitempty"`
	VPCEndpointID               *string   `json:"vpcEndpointID,omitempty"`
}

type ConversionTask struct {
	ConversionTaskID *string `json:"conversionTaskID,omitempty"`
	ExpirationTime   *string `json:"expirationTime,omitempty"`
	StatusMessage    *string `json:"statusMessage,omitempty"`
	Tags             []*Tag  `json:"tags,omitempty"`
}

type CreateFleetError struct {
	ErrorCode                  *string                             `json:"errorCode,omitempty"`
	ErrorMessage               *string                             `json:"errorMessage,omitempty"`
	LaunchTemplateAndOverrides *LaunchTemplateAndOverridesResponse `json:"launchTemplateAndOverrides,omitempty"`
	Lifecycle                  *string                             `json:"lifecycle,omitempty"`
}

type CreateFleetInstance struct {
	InstanceIDs                []*string                           `json:"instanceIDs,omitempty"`
	InstanceType               *string                             `json:"instanceType,omitempty"`
	LaunchTemplateAndOverrides *LaunchTemplateAndOverridesResponse `json:"launchTemplateAndOverrides,omitempty"`
	Lifecycle                  *string                             `json:"lifecycle,omitempty"`
	Platform                   *string                             `json:"platform,omitempty"`
}

type CreateTransitGatewayVPCAttachmentRequestOptions struct {
	DNSSupport  *string `json:"dnsSupport,omitempty"`
	IPv6Support *string `json:"ipv6Support,omitempty"`
}

type CreateVolumePermission struct {
	UserID *string `json:"userID,omitempty"`
}

type CreditSpecification struct {
	CPUCredits *string `json:"cpuCredits,omitempty"`
}

type CreditSpecificationRequest struct {
	CPUCredits *string `json:"cpuCredits,omitempty"`
}

type CustomerGateway_SDK struct {
	BGPASN            *string `json:"bgpASN,omitempty"`
	CertificateARN    *string `json:"certificateARN,omitempty"`
	CustomerGatewayID *string `json:"customerGatewayID,omitempty"`
	DeviceName        *string `json:"deviceName,omitempty"`
	IPAddress         *string `json:"ipAddress,omitempty"`
	State             *string `json:"state,omitempty"`
	Tags              []*Tag  `json:"tags,omitempty"`
	Type              *string `json:"type_,omitempty"`
}

type DHCPConfiguration struct {
	Key *string `json:"key,omitempty"`
}

type DHCPOptions struct {
	DHCPOptionsID *string `json:"dhcpOptionsID,omitempty"`
	OwnerID       *string `json:"ownerID,omitempty"`
	Tags          []*Tag  `json:"tags,omitempty"`
}

type DNSEntry struct {
	DNSName      *string `json:"dnsName,omitempty"`
	HostedZoneID *string `json:"hostedZoneID,omitempty"`
}

type DNSServersOptionsModifyStructure struct {
	CustomDNSServers []*string `json:"customDNSServers,omitempty"`
	Enabled          *bool     `json:"enabled,omitempty"`
}

type DeleteFleetError struct {
	Message *string `json:"message,omitempty"`
}

type DeleteFleetErrorItem struct {
	FleetID *string `json:"fleetID,omitempty"`
}

type DeleteFleetSuccessItem struct {
	CurrentFleetState  *string `json:"currentFleetState,omitempty"`
	FleetID            *string `json:"fleetID,omitempty"`
	PreviousFleetState *string `json:"previousFleetState,omitempty"`
}

type DeleteLaunchTemplateVersionsResponseErrorItem struct {
	LaunchTemplateID   *string `json:"launchTemplateID,omitempty"`
	LaunchTemplateName *string `json:"launchTemplateName,omitempty"`
	VersionNumber      *int64  `json:"versionNumber,omitempty"`
}

type DeleteLaunchTemplateVersionsResponseSuccessItem struct {
	LaunchTemplateID   *string `json:"launchTemplateID,omitempty"`
	LaunchTemplateName *string `json:"launchTemplateName,omitempty"`
	VersionNumber      *int64  `json:"versionNumber,omitempty"`
}

type DeleteQueuedReservedInstancesError struct {
	Message *string `json:"message,omitempty"`
}

type DeregisterInstanceTagAttributeRequest struct {
	IncludeAllTagsOfInstance *bool `json:"includeAllTagsOfInstance,omitempty"`
}

type DescribeFastSnapshotRestoreSuccessItem struct {
	AvailabilityZone      *string      `json:"availabilityZone,omitempty"`
	DisabledTime          *metav1.Time `json:"disabledTime,omitempty"`
	DisablingTime         *metav1.Time `json:"disablingTime,omitempty"`
	EnabledTime           *metav1.Time `json:"enabledTime,omitempty"`
	EnablingTime          *metav1.Time `json:"enablingTime,omitempty"`
	OptimizingTime        *metav1.Time `json:"optimizingTime,omitempty"`
	OwnerAlias            *string      `json:"ownerAlias,omitempty"`
	OwnerID               *string      `json:"ownerID,omitempty"`
	SnapshotID            *string      `json:"snapshotID,omitempty"`
	StateTransitionReason *string      `json:"stateTransitionReason,omitempty"`
}

type DescribeFleetError struct {
	ErrorCode                  *string                             `json:"errorCode,omitempty"`
	ErrorMessage               *string                             `json:"errorMessage,omitempty"`
	LaunchTemplateAndOverrides *LaunchTemplateAndOverridesResponse `json:"launchTemplateAndOverrides,omitempty"`
	Lifecycle                  *string                             `json:"lifecycle,omitempty"`
}

type DescribeFleetsInstances struct {
	InstanceIDs                []*string                           `json:"instanceIDs,omitempty"`
	InstanceType               *string                             `json:"instanceType,omitempty"`
	LaunchTemplateAndOverrides *LaunchTemplateAndOverridesResponse `json:"launchTemplateAndOverrides,omitempty"`
	Lifecycle                  *string                             `json:"lifecycle,omitempty"`
	Platform                   *string                             `json:"platform,omitempty"`
}

type DirectoryServiceAuthentication struct {
	DirectoryID *string `json:"directoryID,omitempty"`
}

type DirectoryServiceAuthenticationRequest struct {
	DirectoryID *string `json:"directoryID,omitempty"`
}

type DisableFastSnapshotRestoreErrorItem struct {
	SnapshotID *string `json:"snapshotID,omitempty"`
}

type DisableFastSnapshotRestoreStateError struct {
	Code    *string `json:"code,omitempty"`
	Message *string `json:"message,omitempty"`
}

type DisableFastSnapshotRestoreStateErrorItem struct {
	AvailabilityZone *string `json:"availabilityZone,omitempty"`
}

type DisableFastSnapshotRestoreSuccessItem struct {
	AvailabilityZone      *string      `json:"availabilityZone,omitempty"`
	DisabledTime          *metav1.Time `json:"disabledTime,omitempty"`
	DisablingTime         *metav1.Time `json:"disablingTime,omitempty"`
	EnabledTime           *metav1.Time `json:"enabledTime,omitempty"`
	EnablingTime          *metav1.Time `json:"enablingTime,omitempty"`
	OptimizingTime        *metav1.Time `json:"optimizingTime,omitempty"`
	OwnerAlias            *string      `json:"ownerAlias,omitempty"`
	OwnerID               *string      `json:"ownerID,omitempty"`
	SnapshotID            *string      `json:"snapshotID,omitempty"`
	StateTransitionReason *string      `json:"stateTransitionReason,omitempty"`
}

type DiskImage struct {
	Description *string `json:"description,omitempty"`
}

type DiskImageDescription struct {
	Checksum          *string `json:"checksum,omitempty"`
	Format            *string `json:"format,omitempty"`
	ImportManifestURL *string `json:"importManifestURL,omitempty"`
	Size              *int64  `json:"size,omitempty"`
}

type DiskImageDetail struct {
	Bytes             *int64  `json:"bytes,omitempty"`
	Format            *string `json:"format,omitempty"`
	ImportManifestURL *string `json:"importManifestURL,omitempty"`
}

type DiskImageVolumeDescription struct {
	ID   *string `json:"id,omitempty"`
	Size *int64  `json:"size,omitempty"`
}

type EBSBlockDevice struct {
	DeleteOnTermination *bool   `json:"deleteOnTermination,omitempty"`
	Encrypted           *bool   `json:"encrypted,omitempty"`
	IOPS                *int64  `json:"iops,omitempty"`
	KMSKeyID            *string `json:"kmsKeyID,omitempty"`
	SnapshotID          *string `json:"snapshotID,omitempty"`
	VolumeSize          *int64  `json:"volumeSize,omitempty"`
	VolumeType          *string `json:"volumeType,omitempty"`
}

type EBSInstanceBlockDevice struct {
	AttachTime          *metav1.Time `json:"attachTime,omitempty"`
	DeleteOnTermination *bool        `json:"deleteOnTermination,omitempty"`
	Status              *string      `json:"status,omitempty"`
	VolumeID            *string      `json:"volumeID,omitempty"`
}

type EBSInstanceBlockDeviceSpecification struct {
	DeleteOnTermination *bool   `json:"deleteOnTermination,omitempty"`
	VolumeID            *string `json:"volumeID,omitempty"`
}

type EgressOnlyInternetGateway_SDK struct {
	Attachments                 []*InternetGatewayAttachment `json:"attachments,omitempty"`
	EgressOnlyInternetGatewayID *string                      `json:"egressOnlyInternetGatewayID,omitempty"`
	Tags                        []*Tag                       `json:"tags,omitempty"`
}

type ElasticGPUAssociation struct {
	ElasticGPUAssociationID    *string `json:"elasticGPUAssociationID,omitempty"`
	ElasticGPUAssociationState *string `json:"elasticGPUAssociationState,omitempty"`
	ElasticGPUAssociationTime  *string `json:"elasticGPUAssociationTime,omitempty"`
	ElasticGPUID               *string `json:"elasticGPUID,omitempty"`
}

type ElasticGPUSpecification struct {
	Type *string `json:"type_,omitempty"`
}

type ElasticGPUSpecificationResponse struct {
	Type *string `json:"type_,omitempty"`
}

type ElasticGPUs struct {
	AvailabilityZone *string `json:"availabilityZone,omitempty"`
	ElasticGPUID     *string `json:"elasticGPUID,omitempty"`
	ElasticGPUType   *string `json:"elasticGPUType,omitempty"`
	InstanceID       *string `json:"instanceID,omitempty"`
	Tags             []*Tag  `json:"tags,omitempty"`
}

type ElasticInferenceAccelerator struct {
	Type *string `json:"type_,omitempty"`
}

type ElasticInferenceAcceleratorAssociation struct {
	ElasticInferenceAcceleratorARN              *string      `json:"elasticInferenceAcceleratorARN,omitempty"`
	ElasticInferenceAcceleratorAssociationID    *string      `json:"elasticInferenceAcceleratorAssociationID,omitempty"`
	ElasticInferenceAcceleratorAssociationState *string      `json:"elasticInferenceAcceleratorAssociationState,omitempty"`
	ElasticInferenceAcceleratorAssociationTime  *metav1.Time `json:"elasticInferenceAcceleratorAssociationTime,omitempty"`
}

type EnableFastSnapshotRestoreErrorItem struct {
	SnapshotID *string `json:"snapshotID,omitempty"`
}

type EnableFastSnapshotRestoreStateError struct {
	Code    *string `json:"code,omitempty"`
	Message *string `json:"message,omitempty"`
}

type EnableFastSnapshotRestoreStateErrorItem struct {
	AvailabilityZone *string `json:"availabilityZone,omitempty"`
}

type EnableFastSnapshotRestoreSuccessItem struct {
	AvailabilityZone      *string      `json:"availabilityZone,omitempty"`
	DisabledTime          *metav1.Time `json:"disabledTime,omitempty"`
	DisablingTime         *metav1.Time `json:"disablingTime,omitempty"`
	EnabledTime           *metav1.Time `json:"enabledTime,omitempty"`
	EnablingTime          *metav1.Time `json:"enablingTime,omitempty"`
	OptimizingTime        *metav1.Time `json:"optimizingTime,omitempty"`
	OwnerAlias            *string      `json:"ownerAlias,omitempty"`
	OwnerID               *string      `json:"ownerID,omitempty"`
	SnapshotID            *string      `json:"snapshotID,omitempty"`
	StateTransitionReason *string      `json:"stateTransitionReason,omitempty"`
}

type EventInformation struct {
	EventDescription *string `json:"eventDescription,omitempty"`
	EventSubType     *string `json:"eventSubType,omitempty"`
	InstanceID       *string `json:"instanceID,omitempty"`
}

type ExportImageTask struct {
	Description       *string `json:"description,omitempty"`
	ExportImageTaskID *string `json:"exportImageTaskID,omitempty"`
	ImageID           *string `json:"imageID,omitempty"`
	Progress          *string `json:"progress,omitempty"`
	Status            *string `json:"status,omitempty"`
	StatusMessage     *string `json:"statusMessage,omitempty"`
	Tags              []*Tag  `json:"tags,omitempty"`
}

type ExportTask struct {
	Description           *string                `json:"description,omitempty"`
	ExportTaskID          *string                `json:"exportTaskID,omitempty"`
	ExportToS3Task        *ExportToS3Task        `json:"exportToS3Task,omitempty"`
	InstanceExportDetails *InstanceExportDetails `json:"instanceExportDetails,omitempty"`
	State                 *string                `json:"state,omitempty"`
	StatusMessage         *string                `json:"statusMessage,omitempty"`
	Tags                  []*Tag                 `json:"tags,omitempty"`
}

type ExportTaskS3Location struct {
	S3Bucket *string `json:"s3Bucket,omitempty"`
	S3Prefix *string `json:"s3Prefix,omitempty"`
}

type ExportTaskS3LocationRequest struct {
	S3Bucket *string `json:"s3Bucket,omitempty"`
	S3Prefix *string `json:"s3Prefix,omitempty"`
}

type ExportToS3Task struct {
	ContainerFormat *string `json:"containerFormat,omitempty"`
	DiskImageFormat *string `json:"diskImageFormat,omitempty"`
	S3Bucket        *string `json:"s3Bucket,omitempty"`
	S3Key           *string `json:"s3Key,omitempty"`
}

type ExportToS3TaskSpecification struct {
	ContainerFormat *string `json:"containerFormat,omitempty"`
	DiskImageFormat *string `json:"diskImageFormat,omitempty"`
	S3Bucket        *string `json:"s3Bucket,omitempty"`
	S3Prefix        *string `json:"s3Prefix,omitempty"`
}

type FPGAImageAttribute struct {
	Description  *string        `json:"description,omitempty"`
	FPGAImageID  *string        `json:"fpgaImageID,omitempty"`
	Name         *string        `json:"name,omitempty"`
	ProductCodes []*ProductCode `json:"productCodes,omitempty"`
}

type FPGAImageState struct {
	Code    *string `json:"code,omitempty"`
	Message *string `json:"message,omitempty"`
}

type FPGAImage_SDK struct {
	CreateTime           *metav1.Time    `json:"createTime,omitempty"`
	DataRetentionSupport *bool           `json:"dataRetentionSupport,omitempty"`
	Description          *string         `json:"description,omitempty"`
	FPGAImageGlobalID    *string         `json:"fpgaImageGlobalID,omitempty"`
	FPGAImageID          *string         `json:"fpgaImageID,omitempty"`
	Name                 *string         `json:"name,omitempty"`
	OwnerAlias           *string         `json:"ownerAlias,omitempty"`
	OwnerID              *string         `json:"ownerID,omitempty"`
	PciID                *PciID          `json:"pciID,omitempty"`
	ProductCodes         []*ProductCode  `json:"productCodes,omitempty"`
	Public               *bool           `json:"public,omitempty"`
	ShellVersion         *string         `json:"shellVersion,omitempty"`
	State                *FPGAImageState `json:"state,omitempty"`
	Tags                 []*Tag          `json:"tags,omitempty"`
	UpdateTime           *metav1.Time    `json:"updateTime,omitempty"`
}

type FailedQueuedPurchaseDeletion struct {
	ReservedInstancesID *string `json:"reservedInstancesID,omitempty"`
}

type FederatedAuthentication struct {
	SamlProviderARN *string `json:"samlProviderARN,omitempty"`
}

type FederatedAuthenticationRequest struct {
	SAMLProviderARN *string `json:"sAMLProviderARN,omitempty"`
}

type Filter struct {
	Name   *string   `json:"name,omitempty"`
	Values []*string `json:"values,omitempty"`
}

type FleetData struct {
	ActivityStatus                   *string                      `json:"activityStatus,omitempty"`
	ClientToken                      *string                      `json:"clientToken,omitempty"`
	CreateTime                       *metav1.Time                 `json:"createTime,omitempty"`
	Errors                           []*DescribeFleetError        `json:"errors,omitempty"`
	ExcessCapacityTerminationPolicy  *string                      `json:"excessCapacityTerminationPolicy,omitempty"`
	FleetID                          *string                      `json:"fleetID,omitempty"`
	FleetState                       *string                      `json:"fleetState,omitempty"`
	FulfilledCapacity                *float64                     `json:"fulfilledCapacity,omitempty"`
	FulfilledOnDemandCapacity        *float64                     `json:"fulfilledOnDemandCapacity,omitempty"`
	Instances                        []*DescribeFleetsInstances   `json:"instances,omitempty"`
	LaunchTemplateConfigs            []*FleetLaunchTemplateConfig `json:"launchTemplateConfigs,omitempty"`
	OnDemandOptions                  *OnDemandOptions             `json:"onDemandOptions,omitempty"`
	ReplaceUnhealthyInstances        *bool                        `json:"replaceUnhealthyInstances,omitempty"`
	SpotOptions                      *SpotOptions                 `json:"spotOptions,omitempty"`
	Tags                             []*Tag                       `json:"tags,omitempty"`
	TargetCapacitySpecification      *TargetCapacitySpecification `json:"targetCapacitySpecification,omitempty"`
	TerminateInstancesWithExpiration *bool                        `json:"terminateInstancesWithExpiration,omitempty"`
	Type                             *string                      `json:"type_,omitempty"`
	ValidFrom                        *metav1.Time                 `json:"validFrom,omitempty"`
	ValidUntil                       *metav1.Time                 `json:"validUntil,omitempty"`
}

type FleetLaunchTemplateConfig struct {
	LaunchTemplateSpecification *FleetLaunchTemplateSpecification `json:"launchTemplateSpecification,omitempty"`
	Overrides                   []*FleetLaunchTemplateOverrides   `json:"overrides,omitempty"`
}

type FleetLaunchTemplateConfigRequest struct {
	LaunchTemplateSpecification *FleetLaunchTemplateSpecificationRequest `json:"launchTemplateSpecification,omitempty"`
	Overrides                   []*FleetLaunchTemplateOverridesRequest   `json:"overrides,omitempty"`
}

type FleetLaunchTemplateOverrides struct {
	AvailabilityZone *string            `json:"availabilityZone,omitempty"`
	InstanceType     *string            `json:"instanceType,omitempty"`
	MaxPrice         *string            `json:"maxPrice,omitempty"`
	Placement        *PlacementResponse `json:"placement,omitempty"`
	Priority         *float64           `json:"priority,omitempty"`
	SubnetID         *string            `json:"subnetID,omitempty"`
	WeightedCapacity *float64           `json:"weightedCapacity,omitempty"`
}

type FleetLaunchTemplateOverridesRequest struct {
	AvailabilityZone *string    `json:"availabilityZone,omitempty"`
	InstanceType     *string    `json:"instanceType,omitempty"`
	MaxPrice         *string    `json:"maxPrice,omitempty"`
	Placement        *Placement `json:"placement,omitempty"`
	Priority         *float64   `json:"priority,omitempty"`
	SubnetID         *string    `json:"subnetID,omitempty"`
	WeightedCapacity *float64   `json:"weightedCapacity,omitempty"`
}

type FleetLaunchTemplateSpecification struct {
	LaunchTemplateID   *string `json:"launchTemplateID,omitempty"`
	LaunchTemplateName *string `json:"launchTemplateName,omitempty"`
	Version            *string `json:"version,omitempty"`
}

type FleetLaunchTemplateSpecificationRequest struct {
	LaunchTemplateID   *string `json:"launchTemplateID,omitempty"`
	LaunchTemplateName *string `json:"launchTemplateName,omitempty"`
	Version            *string `json:"version,omitempty"`
}

type FlowLog struct {
	CreationTime             *metav1.Time `json:"creationTime,omitempty"`
	DeliverLogsErrorMessage  *string      `json:"deliverLogsErrorMessage,omitempty"`
	DeliverLogsPermissionARN *string      `json:"deliverLogsPermissionARN,omitempty"`
	DeliverLogsStatus        *string      `json:"deliverLogsStatus,omitempty"`
	FlowLogID                *string      `json:"flowLogID,omitempty"`
	FlowLogStatus            *string      `json:"flowLogStatus,omitempty"`
	LogDestination           *string      `json:"logDestination,omitempty"`
	LogFormat                *string      `json:"logFormat,omitempty"`
	LogGroupName             *string      `json:"logGroupName,omitempty"`
	MaxAggregationInterval   *int64       `json:"maxAggregationInterval,omitempty"`
	ResourceID               *string      `json:"resourceID,omitempty"`
	Tags                     []*Tag       `json:"tags,omitempty"`
}

type GroupIdentifier struct {
	GroupID   *string `json:"groupID,omitempty"`
	GroupName *string `json:"groupName,omitempty"`
}

type HibernationOptions struct {
	Configured *bool `json:"configured,omitempty"`
}

type HibernationOptionsRequest struct {
	Configured *bool `json:"configured,omitempty"`
}

type HistoryRecord struct {
	Timestamp *metav1.Time `json:"timestamp,omitempty"`
}

type HistoryRecordEntry struct {
	Timestamp *metav1.Time `json:"timestamp,omitempty"`
}

type Host struct {
	AllocationTime                     *metav1.Time `json:"allocationTime,omitempty"`
	AvailabilityZone                   *string      `json:"availabilityZone,omitempty"`
	AvailabilityZoneID                 *string      `json:"availabilityZoneID,omitempty"`
	ClientToken                        *string      `json:"clientToken,omitempty"`
	HostID                             *string      `json:"hostID,omitempty"`
	HostReservationID                  *string      `json:"hostReservationID,omitempty"`
	MemberOfServiceLinkedResourceGroup *bool        `json:"memberOfServiceLinkedResourceGroup,omitempty"`
	OwnerID                            *string      `json:"ownerID,omitempty"`
	ReleaseTime                        *metav1.Time `json:"releaseTime,omitempty"`
	Tags                               []*Tag       `json:"tags,omitempty"`
}

type HostInstance struct {
	InstanceID   *string `json:"instanceID,omitempty"`
	InstanceType *string `json:"instanceType,omitempty"`
	OwnerID      *string `json:"ownerID,omitempty"`
}

type HostOffering struct {
	CurrencyCode   *string `json:"currencyCode,omitempty"`
	Duration       *int64  `json:"duration,omitempty"`
	HourlyPrice    *string `json:"hourlyPrice,omitempty"`
	InstanceFamily *string `json:"instanceFamily,omitempty"`
	OfferingID     *string `json:"offeringID,omitempty"`
	UpfrontPrice   *string `json:"upfrontPrice,omitempty"`
}

type HostProperties struct {
	Cores          *int64  `json:"cores,omitempty"`
	InstanceFamily *string `json:"instanceFamily,omitempty"`
	InstanceType   *string `json:"instanceType,omitempty"`
	Sockets        *int64  `json:"sockets,omitempty"`
	TotalVCPUs     *int64  `json:"totalVCPUs,omitempty"`
}

type HostReservation struct {
	Count             *int64       `json:"count,omitempty"`
	CurrencyCode      *string      `json:"currencyCode,omitempty"`
	Duration          *int64       `json:"duration,omitempty"`
	End               *metav1.Time `json:"end,omitempty"`
	HostReservationID *string      `json:"hostReservationID,omitempty"`
	HourlyPrice       *string      `json:"hourlyPrice,omitempty"`
	InstanceFamily    *string      `json:"instanceFamily,omitempty"`
	OfferingID        *string      `json:"offeringID,omitempty"`
	Start             *metav1.Time `json:"start,omitempty"`
	Tags              []*Tag       `json:"tags,omitempty"`
	UpfrontPrice      *string      `json:"upfrontPrice,omitempty"`
}

type IAMInstanceProfile struct {
	ARN *string `json:"arn,omitempty"`
	ID  *string `json:"id,omitempty"`
}

type IAMInstanceProfileAssociation struct {
	AssociationID *string      `json:"associationID,omitempty"`
	InstanceID    *string      `json:"instanceID,omitempty"`
	Timestamp     *metav1.Time `json:"timestamp,omitempty"`
}

type IAMInstanceProfileSpecification struct {
	ARN  *string `json:"arn,omitempty"`
	Name *string `json:"name,omitempty"`
}

type ICMPTypeCode struct {
	Code *int64 `json:"code,omitempty"`
	Type *int64 `json:"type_,omitempty"`
}

type IDFormat struct {
	Deadline   *metav1.Time `json:"deadline,omitempty"`
	Resource   *string      `json:"resource,omitempty"`
	UseLongIDs *bool        `json:"useLongIDs,omitempty"`
}

type IKEVersionsListValue struct {
	Value *string `json:"value,omitempty"`
}

type IKEVersionsRequestListValue struct {
	Value *string `json:"value,omitempty"`
}

type IPPermission struct {
	FromPort         *int64             `json:"fromPort,omitempty"`
	IPProtocol       *string            `json:"ipProtocol,omitempty"`
	IPRanges         []*IPRange         `json:"ipRanges,omitempty"`
	IPv6Ranges       []*IPv6Range       `json:"ipv6Ranges,omitempty"`
	PrefixListIDs    []*PrefixListID    `json:"prefixListIDs,omitempty"`
	ToPort           *int64             `json:"toPort,omitempty"`
	UserIDGroupPairs []*UserIDGroupPair `json:"userIDGroupPairs,omitempty"`
}

type IPRange struct {
	CIDRIP      *string `json:"cidrIP,omitempty"`
	Description *string `json:"description,omitempty"`
}

type IPv6CIDRAssociation struct {
	AssociatedResource *string `json:"associatedResource,omitempty"`
	IPv6CIDR           *string `json:"ipv6CIDR,omitempty"`
}

type IPv6CIDRBlock struct {
	IPv6CIDRBlock *string `json:"ipv6CIDRBlock,omitempty"`
}

type IPv6Pool struct {
	Description *string `json:"description,omitempty"`
	PoolID      *string `json:"poolID,omitempty"`
	Tags        []*Tag  `json:"tags,omitempty"`
}

type IPv6Range struct {
	CIDRIPv6    *string `json:"cidrIPv6,omitempty"`
	Description *string `json:"description,omitempty"`
}

type ImageDiskContainer struct {
	Description *string `json:"description,omitempty"`
	DeviceName  *string `json:"deviceName,omitempty"`
	Format      *string `json:"format,omitempty"`
	SnapshotID  *string `json:"snapshotID,omitempty"`
	URL         *string `json:"url,omitempty"`
}

type Image_SDK struct {
	Architecture        *string               `json:"architecture,omitempty"`
	BlockDeviceMappings []*BlockDeviceMapping `json:"blockDeviceMappings,omitempty"`
	CreationDate        *string               `json:"creationDate,omitempty"`
	Description         *string               `json:"description,omitempty"`
	EnaSupport          *bool                 `json:"enaSupport,omitempty"`
	Hypervisor          *string               `json:"hypervisor,omitempty"`
	ImageID             *string               `json:"imageID,omitempty"`
	ImageLocation       *string               `json:"imageLocation,omitempty"`
	ImageOwnerAlias     *string               `json:"imageOwnerAlias,omitempty"`
	ImageType           *string               `json:"imageType,omitempty"`
	KernelID            *string               `json:"kernelID,omitempty"`
	Name                *string               `json:"name,omitempty"`
	OwnerID             *string               `json:"ownerID,omitempty"`
	Platform            *string               `json:"platform,omitempty"`
	PlatformDetails     *string               `json:"platformDetails,omitempty"`
	ProductCodes        []*ProductCode        `json:"productCodes,omitempty"`
	Public              *bool                 `json:"public,omitempty"`
	RamdiskID           *string               `json:"ramdiskID,omitempty"`
	RootDeviceName      *string               `json:"rootDeviceName,omitempty"`
	RootDeviceType      *string               `json:"rootDeviceType,omitempty"`
	SriovNetSupport     *string               `json:"sriovNetSupport,omitempty"`
	State               *string               `json:"state,omitempty"`
	StateReason         *StateReason          `json:"stateReason,omitempty"`
	Tags                []*Tag                `json:"tags,omitempty"`
	UsageOperation      *string               `json:"usageOperation,omitempty"`
	VirtualizationType  *string               `json:"virtualizationType,omitempty"`
}

type ImportImageLicenseConfigurationRequest struct {
	LicenseConfigurationARN *string `json:"licenseConfigurationARN,omitempty"`
}

type ImportImageLicenseConfigurationResponse struct {
	LicenseConfigurationARN *string `json:"licenseConfigurationARN,omitempty"`
}

type ImportImageTask struct {
	Architecture  *string `json:"architecture,omitempty"`
	Description   *string `json:"description,omitempty"`
	Encrypted     *bool   `json:"encrypted,omitempty"`
	Hypervisor    *string `json:"hypervisor,omitempty"`
	ImageID       *string `json:"imageID,omitempty"`
	ImportTaskID  *string `json:"importTaskID,omitempty"`
	KMSKeyID      *string `json:"kmsKeyID,omitempty"`
	LicenseType   *string `json:"licenseType,omitempty"`
	Platform      *string `json:"platform,omitempty"`
	Progress      *string `json:"progress,omitempty"`
	Status        *string `json:"status,omitempty"`
	StatusMessage *string `json:"statusMessage,omitempty"`
	Tags          []*Tag  `json:"tags,omitempty"`
}

type ImportInstanceLaunchSpecification struct {
	AdditionalInfo                    *string    `json:"additionalInfo,omitempty"`
	Architecture                      *string    `json:"architecture,omitempty"`
	GroupIDs                          []*string  `json:"groupIDs,omitempty"`
	GroupNames                        []*string  `json:"groupNames,omitempty"`
	InstanceInitiatedShutdownBehavior *string    `json:"instanceInitiatedShutdownBehavior,omitempty"`
	InstanceType                      *string    `json:"instanceType,omitempty"`
	Monitoring                        *bool      `json:"monitoring,omitempty"`
	Placement                         *Placement `json:"placement,omitempty"`
	PrivateIPAddress                  *string    `json:"privateIPAddress,omitempty"`
	SubnetID                          *string    `json:"subnetID,omitempty"`
}

type ImportInstanceTaskDetails struct {
	Description *string `json:"description,omitempty"`
	InstanceID  *string `json:"instanceID,omitempty"`
	Platform    *string `json:"platform,omitempty"`
}

type ImportInstanceVolumeDetailItem struct {
	AvailabilityZone *string `json:"availabilityZone,omitempty"`
	BytesConverted   *int64  `json:"bytesConverted,omitempty"`
	Description      *string `json:"description,omitempty"`
	Status           *string `json:"status,omitempty"`
	StatusMessage    *string `json:"statusMessage,omitempty"`
}

type ImportSnapshotTask struct {
	Description  *string `json:"description,omitempty"`
	ImportTaskID *string `json:"importTaskID,omitempty"`
	Tags         []*Tag  `json:"tags,omitempty"`
}

type ImportVolumeTaskDetails struct {
	AvailabilityZone *string `json:"availabilityZone,omitempty"`
	BytesConverted   *int64  `json:"bytesConverted,omitempty"`
	Description      *string `json:"description,omitempty"`
}

type Instance struct {
	AmiLaunchIndex        *int64             `json:"amiLaunchIndex,omitempty"`
	Architecture          *string            `json:"architecture,omitempty"`
	CapacityReservationID *string            `json:"capacityReservationID,omitempty"`
	ClientToken           *string            `json:"clientToken,omitempty"`
	EBSOptimized          *bool              `json:"ebsOptimized,omitempty"`
	EnaSupport            *bool              `json:"enaSupport,omitempty"`
	Hypervisor            *string            `json:"hypervisor,omitempty"`
	ImageID               *string            `json:"imageID,omitempty"`
	InstanceID            *string            `json:"instanceID,omitempty"`
	InstanceType          *string            `json:"instanceType,omitempty"`
	KernelID              *string            `json:"kernelID,omitempty"`
	KeyName               *string            `json:"keyName,omitempty"`
	LaunchTime            *metav1.Time       `json:"launchTime,omitempty"`
	OutpostARN            *string            `json:"outpostARN,omitempty"`
	Placement             *Placement         `json:"placement,omitempty"`
	Platform              *string            `json:"platform,omitempty"`
	PrivateDNSName        *string            `json:"privateDNSName,omitempty"`
	PrivateIPAddress      *string            `json:"privateIPAddress,omitempty"`
	ProductCodes          []*ProductCode     `json:"productCodes,omitempty"`
	PublicDNSName         *string            `json:"publicDNSName,omitempty"`
	PublicIPAddress       *string            `json:"publicIPAddress,omitempty"`
	RamdiskID             *string            `json:"ramdiskID,omitempty"`
	RootDeviceName        *string            `json:"rootDeviceName,omitempty"`
	RootDeviceType        *string            `json:"rootDeviceType,omitempty"`
	SecurityGroups        []*GroupIdentifier `json:"securityGroups,omitempty"`
	SourceDestCheck       *bool              `json:"sourceDestCheck,omitempty"`
	SpotInstanceRequestID *string            `json:"spotInstanceRequestID,omitempty"`
	SriovNetSupport       *string            `json:"sriovNetSupport,omitempty"`
	StateReason           *StateReason       `json:"stateReason,omitempty"`
	StateTransitionReason *string            `json:"stateTransitionReason,omitempty"`
	SubnetID              *string            `json:"subnetID,omitempty"`
	Tags                  []*Tag             `json:"tags,omitempty"`
	VirtualizationType    *string            `json:"virtualizationType,omitempty"`
	VPCID                 *string            `json:"vpcID,omitempty"`
}

type InstanceBlockDeviceMapping struct {
	DeviceName *string `json:"deviceName,omitempty"`
}

type InstanceBlockDeviceMappingSpecification struct {
	DeviceName  *string `json:"deviceName,omitempty"`
	NoDevice    *string `json:"noDevice,omitempty"`
	VirtualName *string `json:"virtualName,omitempty"`
}

type InstanceCapacity struct {
	AvailableCapacity *int64  `json:"availableCapacity,omitempty"`
	InstanceType      *string `json:"instanceType,omitempty"`
	TotalCapacity     *int64  `json:"totalCapacity,omitempty"`
}

type InstanceCount struct {
	InstanceCount *int64  `json:"instanceCount,omitempty"`
	State         *string `json:"state,omitempty"`
}

type InstanceCreditSpecification struct {
	CPUCredits *string `json:"cpuCredits,omitempty"`
	InstanceID *string `json:"instanceID,omitempty"`
}

type InstanceCreditSpecificationRequest struct {
	CPUCredits *string `json:"cpuCredits,omitempty"`
	InstanceID *string `json:"instanceID,omitempty"`
}

type InstanceExportDetails struct {
	InstanceID        *string `json:"instanceID,omitempty"`
	TargetEnvironment *string `json:"targetEnvironment,omitempty"`
}

type InstanceFamilyCreditSpecification struct {
	CPUCredits *string `json:"cpuCredits,omitempty"`
}

type InstanceIPv6Address struct {
	IPv6Address *string `json:"ipv6Address,omitempty"`
}

type InstanceIPv6AddressRequest struct {
	IPv6Address *string `json:"ipv6Address,omitempty"`
}

type InstanceMarketOptionsRequest struct {
	MarketType *string `json:"marketType,omitempty"`
}

type InstanceMetadataOptionsRequest struct {
	HTTPPutResponseHopLimit *int64 `json:"httpPutResponseHopLimit,omitempty"`
}

type InstanceMetadataOptionsResponse struct {
	HTTPPutResponseHopLimit *int64 `json:"httpPutResponseHopLimit,omitempty"`
}

type InstanceMonitoring struct {
	InstanceID *string `json:"instanceID,omitempty"`
}

type InstanceNetworkInterface struct {
	Description        *string                `json:"description,omitempty"`
	Groups             []*GroupIdentifier     `json:"groups,omitempty"`
	InterfaceType      *string                `json:"interfaceType,omitempty"`
	IPv6Addresses      []*InstanceIPv6Address `json:"ipv6Addresses,omitempty"`
	MacAddress         *string                `json:"macAddress,omitempty"`
	NetworkInterfaceID *string                `json:"networkInterfaceID,omitempty"`
	OwnerID            *string                `json:"ownerID,omitempty"`
	PrivateDNSName     *string                `json:"privateDNSName,omitempty"`
	PrivateIPAddress   *string                `json:"privateIPAddress,omitempty"`
	SourceDestCheck    *bool                  `json:"sourceDestCheck,omitempty"`
	Status             *string                `json:"status,omitempty"`
	SubnetID           *string                `json:"subnetID,omitempty"`
	VPCID              *string                `json:"vpcID,omitempty"`
}

type InstanceNetworkInterfaceAssociation struct {
	CarrierIP     *string `json:"carrierIP,omitempty"`
	IPOwnerID     *string `json:"ipOwnerID,omitempty"`
	PublicDNSName *string `json:"publicDNSName,omitempty"`
	PublicIP      *string `json:"publicIP,omitempty"`
}

type InstanceNetworkInterfaceAttachment struct {
	AttachTime          *metav1.Time `json:"attachTime,omitempty"`
	AttachmentID        *string      `json:"attachmentID,omitempty"`
	DeleteOnTermination *bool        `json:"deleteOnTermination,omitempty"`
	DeviceIndex         *int64       `json:"deviceIndex,omitempty"`
	Status              *string      `json:"status,omitempty"`
}

type InstanceNetworkInterfaceSpecification struct {
	AssociateCarrierIPAddress      *bool                            `json:"associateCarrierIPAddress,omitempty"`
	AssociatePublicIPAddress       *bool                            `json:"associatePublicIPAddress,omitempty"`
	DeleteOnTermination            *bool                            `json:"deleteOnTermination,omitempty"`
	Description                    *string                          `json:"description,omitempty"`
	DeviceIndex                    *int64                           `json:"deviceIndex,omitempty"`
	Groups                         []*string                        `json:"groups,omitempty"`
	InterfaceType                  *string                          `json:"interfaceType,omitempty"`
	IPv6AddressCount               *int64                           `json:"ipv6AddressCount,omitempty"`
	IPv6Addresses                  []*InstanceIPv6Address           `json:"ipv6Addresses,omitempty"`
	NetworkInterfaceID             *string                          `json:"networkInterfaceID,omitempty"`
	PrivateIPAddress               *string                          `json:"privateIPAddress,omitempty"`
	PrivateIPAddresses             []*PrivateIPAddressSpecification `json:"privateIPAddresses,omitempty"`
	SecondaryPrivateIPAddressCount *int64                           `json:"secondaryPrivateIPAddressCount,omitempty"`
	SubnetID                       *string                          `json:"subnetID,omitempty"`
}

type InstancePrivateIPAddress struct {
	Primary          *bool   `json:"primary,omitempty"`
	PrivateDNSName   *string `json:"privateDNSName,omitempty"`
	PrivateIPAddress *string `json:"privateIPAddress,omitempty"`
}

type InstanceSpecification struct {
	ExcludeBootVolume *bool   `json:"excludeBootVolume,omitempty"`
	InstanceID        *string `json:"instanceID,omitempty"`
}

type InstanceState struct {
	Code *int64 `json:"code,omitempty"`
}

type InstanceStateChange struct {
	InstanceID *string `json:"instanceID,omitempty"`
}

type InstanceStatus struct {
	AvailabilityZone *string `json:"availabilityZone,omitempty"`
	InstanceID       *string `json:"instanceID,omitempty"`
	OutpostARN       *string `json:"outpostARN,omitempty"`
}

type InstanceStatusDetails struct {
	ImpairedSince *metav1.Time `json:"impairedSince,omitempty"`
}

type InstanceStatusEvent struct {
	Description       *string      `json:"description,omitempty"`
	NotAfter          *metav1.Time `json:"notAfter,omitempty"`
	NotBefore         *metav1.Time `json:"notBefore,omitempty"`
	NotBeforeDeadline *metav1.Time `json:"notBeforeDeadline,omitempty"`
}

type InstanceTagNotificationAttribute struct {
	IncludeAllTagsOfInstance *bool `json:"includeAllTagsOfInstance,omitempty"`
}

type InstanceTypeInfo struct {
	InstanceType *string `json:"instanceType,omitempty"`
}

type InstanceTypeOffering struct {
	InstanceType *string `json:"instanceType,omitempty"`
}

type InstanceUsage struct {
	AccountID         *string `json:"accountID,omitempty"`
	UsedInstanceCount *int64  `json:"usedInstanceCount,omitempty"`
}

type InternetGatewayAttachment struct {
	State *string `json:"state,omitempty"`
	VPCID *string `json:"vpcID,omitempty"`
}

type InternetGateway_SDK struct {
	Attachments       []*InternetGatewayAttachment `json:"attachments,omitempty"`
	InternetGatewayID *string                      `json:"internetGatewayID,omitempty"`
	OwnerID           *string                      `json:"ownerID,omitempty"`
	Tags              []*Tag                       `json:"tags,omitempty"`
}

type KeyPairInfo struct {
	KeyFingerprint *string `json:"keyFingerprint,omitempty"`
	KeyName        *string `json:"keyName,omitempty"`
	KeyPairID      *string `json:"keyPairID,omitempty"`
	Tags           []*Tag  `json:"tags,omitempty"`
}

type LastError struct {
	Code    *string `json:"code,omitempty"`
	Message *string `json:"message,omitempty"`
}

type LaunchPermission struct {
	UserID *string `json:"userID,omitempty"`
}

type LaunchSpecification struct {
	AddressingType      *string               `json:"addressingType,omitempty"`
	BlockDeviceMappings []*BlockDeviceMapping `json:"blockDeviceMappings,omitempty"`
	EBSOptimized        *bool                 `json:"ebsOptimized,omitempty"`
	ImageID             *string               `json:"imageID,omitempty"`
	InstanceType        *string               `json:"instanceType,omitempty"`
	KernelID            *string               `json:"kernelID,omitempty"`
	KeyName             *string               `json:"keyName,omitempty"`
	RamdiskID           *string               `json:"ramdiskID,omitempty"`
	SecurityGroups      []*GroupIdentifier    `json:"securityGroups,omitempty"`
	SubnetID            *string               `json:"subnetID,omitempty"`
	UserData            *string               `json:"userData,omitempty"`
}

type LaunchTemplateAndOverridesResponse struct {
	LaunchTemplateSpecification *FleetLaunchTemplateSpecification `json:"launchTemplateSpecification,omitempty"`
	Overrides                   *FleetLaunchTemplateOverrides     `json:"overrides,omitempty"`
}

type LaunchTemplateBlockDeviceMapping struct {
	DeviceName  *string                       `json:"deviceName,omitempty"`
	EBS         *LaunchTemplateEBSBlockDevice `json:"ebs,omitempty"`
	NoDevice    *string                       `json:"noDevice,omitempty"`
	VirtualName *string                       `json:"virtualName,omitempty"`
}

type LaunchTemplateBlockDeviceMappingRequest struct {
	DeviceName  *string                              `json:"deviceName,omitempty"`
	EBS         *LaunchTemplateEBSBlockDeviceRequest `json:"ebs,omitempty"`
	NoDevice    *string                              `json:"noDevice,omitempty"`
	VirtualName *string                              `json:"virtualName,omitempty"`
}

type LaunchTemplateCPUOptions struct {
	CoreCount      *int64 `json:"coreCount,omitempty"`
	ThreadsPerCore *int64 `json:"threadsPerCore,omitempty"`
}

type LaunchTemplateCPUOptionsRequest struct {
	CoreCount      *int64 `json:"coreCount,omitempty"`
	ThreadsPerCore *int64 `json:"threadsPerCore,omitempty"`
}

type LaunchTemplateCapacityReservationSpecificationRequest struct {
	CapacityReservationPreference *string                    `json:"capacityReservationPreference,omitempty"`
	CapacityReservationTarget     *CapacityReservationTarget `json:"capacityReservationTarget,omitempty"`
}

type LaunchTemplateCapacityReservationSpecificationResponse struct {
	CapacityReservationPreference *string                            `json:"capacityReservationPreference,omitempty"`
	CapacityReservationTarget     *CapacityReservationTargetResponse `json:"capacityReservationTarget,omitempty"`
}

type LaunchTemplateConfig struct {
	LaunchTemplateSpecification *FleetLaunchTemplateSpecification `json:"launchTemplateSpecification,omitempty"`
}

type LaunchTemplateEBSBlockDevice struct {
	DeleteOnTermination *bool   `json:"deleteOnTermination,omitempty"`
	Encrypted           *bool   `json:"encrypted,omitempty"`
	IOPS                *int64  `json:"iops,omitempty"`
	KMSKeyID            *string `json:"kmsKeyID,omitempty"`
	SnapshotID          *string `json:"snapshotID,omitempty"`
	VolumeSize          *int64  `json:"volumeSize,omitempty"`
	VolumeType          *string `json:"volumeType,omitempty"`
}

type LaunchTemplateEBSBlockDeviceRequest struct {
	DeleteOnTermination *bool   `json:"deleteOnTermination,omitempty"`
	Encrypted           *bool   `json:"encrypted,omitempty"`
	IOPS                *int64  `json:"iops,omitempty"`
	KMSKeyID            *string `json:"kmsKeyID,omitempty"`
	SnapshotID          *string `json:"snapshotID,omitempty"`
	VolumeSize          *int64  `json:"volumeSize,omitempty"`
	VolumeType          *string `json:"volumeType,omitempty"`
}

type LaunchTemplateElasticInferenceAccelerator struct {
	Count *int64  `json:"count,omitempty"`
	Type  *string `json:"type_,omitempty"`
}

type LaunchTemplateElasticInferenceAcceleratorResponse struct {
	Count *int64  `json:"count,omitempty"`
	Type  *string `json:"type_,omitempty"`
}

type LaunchTemplateHibernationOptions struct {
	Configured *bool `json:"configured,omitempty"`
}

type LaunchTemplateHibernationOptionsRequest struct {
	Configured *bool `json:"configured,omitempty"`
}

type LaunchTemplateIAMInstanceProfileSpecification struct {
	ARN  *string `json:"arn,omitempty"`
	Name *string `json:"name,omitempty"`
}

type LaunchTemplateIAMInstanceProfileSpecificationRequest struct {
	ARN  *string `json:"arn,omitempty"`
	Name *string `json:"name,omitempty"`
}

type LaunchTemplateInstanceMarketOptions struct {
	MarketType  *string                          `json:"marketType,omitempty"`
	SpotOptions *LaunchTemplateSpotMarketOptions `json:"spotOptions,omitempty"`
}

type LaunchTemplateInstanceMarketOptionsRequest struct {
	MarketType  *string                                 `json:"marketType,omitempty"`
	SpotOptions *LaunchTemplateSpotMarketOptionsRequest `json:"spotOptions,omitempty"`
}

type LaunchTemplateInstanceMetadataOptions struct {
	HTTPEndpoint            *string `json:"httpEndpoint,omitempty"`
	HTTPPutResponseHopLimit *int64  `json:"httpPutResponseHopLimit,omitempty"`
	HTTPTokens              *string `json:"httpTokens,omitempty"`
	State                   *string `json:"state,omitempty"`
}

type LaunchTemplateInstanceMetadataOptionsRequest struct {
	HTTPEndpoint            *string `json:"httpEndpoint,omitempty"`
	HTTPPutResponseHopLimit *int64  `json:"httpPutResponseHopLimit,omitempty"`
	HTTPTokens              *string `json:"httpTokens,omitempty"`
}

type LaunchTemplateInstanceNetworkInterfaceSpecification struct {
	AssociateCarrierIPAddress      *bool                            `json:"associateCarrierIPAddress,omitempty"`
	AssociatePublicIPAddress       *bool                            `json:"associatePublicIPAddress,omitempty"`
	DeleteOnTermination            *bool                            `json:"deleteOnTermination,omitempty"`
	Description                    *string                          `json:"description,omitempty"`
	DeviceIndex                    *int64                           `json:"deviceIndex,omitempty"`
	Groups                         []*string                        `json:"groups,omitempty"`
	InterfaceType                  *string                          `json:"interfaceType,omitempty"`
	IPv6AddressCount               *int64                           `json:"ipv6AddressCount,omitempty"`
	IPv6Addresses                  []*InstanceIPv6Address           `json:"ipv6Addresses,omitempty"`
	NetworkInterfaceID             *string                          `json:"networkInterfaceID,omitempty"`
	PrivateIPAddress               *string                          `json:"privateIPAddress,omitempty"`
	PrivateIPAddresses             []*PrivateIPAddressSpecification `json:"privateIPAddresses,omitempty"`
	SecondaryPrivateIPAddressCount *int64                           `json:"secondaryPrivateIPAddressCount,omitempty"`
	SubnetID                       *string                          `json:"subnetID,omitempty"`
}

type LaunchTemplateInstanceNetworkInterfaceSpecificationRequest struct {
	AssociateCarrierIPAddress      *bool                            `json:"associateCarrierIPAddress,omitempty"`
	AssociatePublicIPAddress       *bool                            `json:"associatePublicIPAddress,omitempty"`
	DeleteOnTermination            *bool                            `json:"deleteOnTermination,omitempty"`
	Description                    *string                          `json:"description,omitempty"`
	DeviceIndex                    *int64                           `json:"deviceIndex,omitempty"`
	Groups                         []*string                        `json:"groups,omitempty"`
	InterfaceType                  *string                          `json:"interfaceType,omitempty"`
	IPv6AddressCount               *int64                           `json:"ipv6AddressCount,omitempty"`
	IPv6Addresses                  []*InstanceIPv6AddressRequest    `json:"ipv6Addresses,omitempty"`
	NetworkInterfaceID             *string                          `json:"networkInterfaceID,omitempty"`
	PrivateIPAddress               *string                          `json:"privateIPAddress,omitempty"`
	PrivateIPAddresses             []*PrivateIPAddressSpecification `json:"privateIPAddresses,omitempty"`
	SecondaryPrivateIPAddressCount *int64                           `json:"secondaryPrivateIPAddressCount,omitempty"`
	SubnetID                       *string                          `json:"subnetID,omitempty"`
}

type LaunchTemplateLicenseConfiguration struct {
	LicenseConfigurationARN *string `json:"licenseConfigurationARN,omitempty"`
}

type LaunchTemplateLicenseConfigurationRequest struct {
	LicenseConfigurationARN *string `json:"licenseConfigurationARN,omitempty"`
}

type LaunchTemplateOverrides struct {
	AvailabilityZone *string  `json:"availabilityZone,omitempty"`
	InstanceType     *string  `json:"instanceType,omitempty"`
	Priority         *float64 `json:"priority,omitempty"`
	SpotPrice        *string  `json:"spotPrice,omitempty"`
	SubnetID         *string  `json:"subnetID,omitempty"`
	WeightedCapacity *float64 `json:"weightedCapacity,omitempty"`
}

type LaunchTemplatePlacement struct {
	Affinity             *string `json:"affinity,omitempty"`
	AvailabilityZone     *string `json:"availabilityZone,omitempty"`
	GroupName            *string `json:"groupName,omitempty"`
	HostID               *string `json:"hostID,omitempty"`
	HostResourceGroupARN *string `json:"hostResourceGroupARN,omitempty"`
	PartitionNumber      *int64  `json:"partitionNumber,omitempty"`
	SpreadDomain         *string `json:"spreadDomain,omitempty"`
	Tenancy              *string `json:"tenancy,omitempty"`
}

type LaunchTemplatePlacementRequest struct {
	Affinity             *string `json:"affinity,omitempty"`
	AvailabilityZone     *string `json:"availabilityZone,omitempty"`
	GroupName            *string `json:"groupName,omitempty"`
	HostID               *string `json:"hostID,omitempty"`
	HostResourceGroupARN *string `json:"hostResourceGroupARN,omitempty"`
	PartitionNumber      *int64  `json:"partitionNumber,omitempty"`
	SpreadDomain         *string `json:"spreadDomain,omitempty"`
	Tenancy              *string `json:"tenancy,omitempty"`
}

type LaunchTemplateSpecification struct {
	LaunchTemplateID   *string `json:"launchTemplateID,omitempty"`
	LaunchTemplateName *string `json:"launchTemplateName,omitempty"`
	Version            *string `json:"version,omitempty"`
}

type LaunchTemplateSpotMarketOptions struct {
	BlockDurationMinutes         *int64       `json:"blockDurationMinutes,omitempty"`
	InstanceInterruptionBehavior *string      `json:"instanceInterruptionBehavior,omitempty"`
	MaxPrice                     *string      `json:"maxPrice,omitempty"`
	SpotInstanceType             *string      `json:"spotInstanceType,omitempty"`
	ValidUntil                   *metav1.Time `json:"validUntil,omitempty"`
}

type LaunchTemplateSpotMarketOptionsRequest struct {
	BlockDurationMinutes         *int64       `json:"blockDurationMinutes,omitempty"`
	InstanceInterruptionBehavior *string      `json:"instanceInterruptionBehavior,omitempty"`
	MaxPrice                     *string      `json:"maxPrice,omitempty"`
	SpotInstanceType             *string      `json:"spotInstanceType,omitempty"`
	ValidUntil                   *metav1.Time `json:"validUntil,omitempty"`
}

type LaunchTemplateTagSpecification struct {
	ResourceType *string `json:"resourceType,omitempty"`
	Tags         []*Tag  `json:"tags,omitempty"`
}

type LaunchTemplateTagSpecificationRequest struct {
	ResourceType *string `json:"resourceType,omitempty"`
	Tags         []*Tag  `json:"tags,omitempty"`
}

type LaunchTemplateVersion_SDK struct {
	CreateTime         *metav1.Time                `json:"createTime,omitempty"`
	CreatedBy          *string                     `json:"createdBy,omitempty"`
	DefaultVersion     *bool                       `json:"defaultVersion,omitempty"`
	LaunchTemplateData *ResponseLaunchTemplateData `json:"launchTemplateData,omitempty"`
	LaunchTemplateID   *string                     `json:"launchTemplateID,omitempty"`
	LaunchTemplateName *string                     `json:"launchTemplateName,omitempty"`
	VersionDescription *string                     `json:"versionDescription,omitempty"`
	VersionNumber      *int64                      `json:"versionNumber,omitempty"`
}

type LaunchTemplate_SDK struct {
	CreateTime           *metav1.Time `json:"createTime,omitempty"`
	CreatedBy            *string      `json:"createdBy,omitempty"`
	DefaultVersionNumber *int64       `json:"defaultVersionNumber,omitempty"`
	LatestVersionNumber  *int64       `json:"latestVersionNumber,omitempty"`
	LaunchTemplateID     *string      `json:"launchTemplateID,omitempty"`
	LaunchTemplateName   *string      `json:"launchTemplateName,omitempty"`
	Tags                 []*Tag       `json:"tags,omitempty"`
}

type LaunchTemplatesMonitoring struct {
	Enabled *bool `json:"enabled,omitempty"`
}

type LaunchTemplatesMonitoringRequest struct {
	Enabled *bool `json:"enabled,omitempty"`
}

type LicenseConfiguration struct {
	LicenseConfigurationARN *string `json:"licenseConfigurationARN,omitempty"`
}

type LicenseConfigurationRequest struct {
	LicenseConfigurationARN *string `json:"licenseConfigurationARN,omitempty"`
}

type LoadPermission struct {
	UserID *string `json:"userID,omitempty"`
}

type LoadPermissionRequest struct {
	UserID *string `json:"userID,omitempty"`
}

type LocalGateway struct {
	LocalGatewayID *string `json:"localGatewayID,omitempty"`
	OutpostARN     *string `json:"outpostARN,omitempty"`
	OwnerID        *string `json:"ownerID,omitempty"`
	State          *string `json:"state,omitempty"`
	Tags           []*Tag  `json:"tags,omitempty"`
}

type LocalGatewayRouteTable struct {
	LocalGatewayID            *string `json:"localGatewayID,omitempty"`
	LocalGatewayRouteTableARN *string `json:"localGatewayRouteTableARN,omitempty"`
	LocalGatewayRouteTableID  *string `json:"localGatewayRouteTableID,omitempty"`
	OutpostARN                *string `json:"outpostARN,omitempty"`
	OwnerID                   *string `json:"ownerID,omitempty"`
	State                     *string `json:"state,omitempty"`
	Tags                      []*Tag  `json:"tags,omitempty"`
}

type LocalGatewayRouteTableVPCAssociation_SDK struct {
	LocalGatewayID                         *string `json:"localGatewayID,omitempty"`
	LocalGatewayRouteTableARN              *string `json:"localGatewayRouteTableARN,omitempty"`
	LocalGatewayRouteTableID               *string `json:"localGatewayRouteTableID,omitempty"`
	LocalGatewayRouteTableVPCAssociationID *string `json:"localGatewayRouteTableVPCAssociationID,omitempty"`
	OwnerID                                *string `json:"ownerID,omitempty"`
	State                                  *string `json:"state,omitempty"`
	Tags                                   []*Tag  `json:"tags,omitempty"`
	VPCID                                  *string `json:"vpcID,omitempty"`
}

type LocalGatewayRouteTableVirtualInterfaceGroupAssociation struct {
	LocalGatewayID                      *string `json:"localGatewayID,omitempty"`
	LocalGatewayRouteTableARN           *string `json:"localGatewayRouteTableARN,omitempty"`
	LocalGatewayRouteTableID            *string `json:"localGatewayRouteTableID,omitempty"`
	LocalGatewayVirtualInterfaceGroupID *string `json:"localGatewayVirtualInterfaceGroupID,omitempty"`
	OwnerID                             *string `json:"ownerID,omitempty"`
	State                               *string `json:"state,omitempty"`
	Tags                                []*Tag  `json:"tags,omitempty"`
}

type LocalGatewayRoute_SDK struct {
	DestinationCIDRBlock                *string `json:"destinationCIDRBlock,omitempty"`
	LocalGatewayRouteTableARN           *string `json:"localGatewayRouteTableARN,omitempty"`
	LocalGatewayRouteTableID            *string `json:"localGatewayRouteTableID,omitempty"`
	LocalGatewayVirtualInterfaceGroupID *string `json:"localGatewayVirtualInterfaceGroupID,omitempty"`
	OwnerID                             *string `json:"ownerID,omitempty"`
	State                               *string `json:"state,omitempty"`
	Type                                *string `json:"type_,omitempty"`
}

type LocalGatewayVirtualInterface struct {
	LocalAddress   *string `json:"localAddress,omitempty"`
	LocalBGPASN    *int64  `json:"localBGPASN,omitempty"`
	LocalGatewayID *string `json:"localGatewayID,omitempty"`
	OwnerID        *string `json:"ownerID,omitempty"`
	PeerAddress    *string `json:"peerAddress,omitempty"`
	PeerBGPASN     *int64  `json:"peerBGPASN,omitempty"`
	Tags           []*Tag  `json:"tags,omitempty"`
	Vlan           *int64  `json:"vlan,omitempty"`
}

type LocalGatewayVirtualInterfaceGroup struct {
	LocalGatewayID                      *string `json:"localGatewayID,omitempty"`
	LocalGatewayVirtualInterfaceGroupID *string `json:"localGatewayVirtualInterfaceGroupID,omitempty"`
	OwnerID                             *string `json:"ownerID,omitempty"`
	Tags                                []*Tag  `json:"tags,omitempty"`
}

type ManagedPrefixList_SDK struct {
	AddressFamily  *string `json:"addressFamily,omitempty"`
	MaxEntries     *int64  `json:"maxEntries,omitempty"`
	OwnerID        *string `json:"ownerID,omitempty"`
	PrefixListARN  *string `json:"prefixListARN,omitempty"`
	PrefixListID   *string `json:"prefixListID,omitempty"`
	PrefixListName *string `json:"prefixListName,omitempty"`
	State          *string `json:"state,omitempty"`
	StateMessage   *string `json:"stateMessage,omitempty"`
	Tags           []*Tag  `json:"tags,omitempty"`
	Version        *int64  `json:"version,omitempty"`
}

type ModifyTransitGatewayOptions struct {
	AssociationDefaultRouteTableID *string `json:"associationDefaultRouteTableID,omitempty"`
	AutoAcceptSharedAttachments    *string `json:"autoAcceptSharedAttachments,omitempty"`
	DefaultRouteTableAssociation   *string `json:"defaultRouteTableAssociation,omitempty"`
	DefaultRouteTablePropagation   *string `json:"defaultRouteTablePropagation,omitempty"`
	DNSSupport                     *string `json:"dnsSupport,omitempty"`
	PropagationDefaultRouteTableID *string `json:"propagationDefaultRouteTableID,omitempty"`
	VPNEcmpSupport                 *string `json:"vpnEcmpSupport,omitempty"`
}

type ModifyTransitGatewayVPCAttachmentRequestOptions struct {
	DNSSupport  *string `json:"dnsSupport,omitempty"`
	IPv6Support *string `json:"ipv6Support,omitempty"`
}

type ModifyVPNTunnelOptionsSpecification struct {
	DPDTimeoutAction           *string                                       `json:"dPDTimeoutAction,omitempty"`
	DPDTimeoutSeconds          *int64                                        `json:"dPDTimeoutSeconds,omitempty"`
	IKEVersions                []*IKEVersionsRequestListValue                `json:"iKEVersions,omitempty"`
	Phase1DHGroupNumbers       []*Phase1DHGroupNumbersRequestListValue       `json:"phase1DHGroupNumbers,omitempty"`
	Phase1EncryptionAlgorithms []*Phase1EncryptionAlgorithmsRequestListValue `json:"phase1EncryptionAlgorithms,omitempty"`
	Phase1IntegrityAlgorithms  []*Phase1IntegrityAlgorithmsRequestListValue  `json:"phase1IntegrityAlgorithms,omitempty"`
	Phase1LifetimeSeconds      *int64                                        `json:"phase1LifetimeSeconds,omitempty"`
	Phase2DHGroupNumbers       []*Phase2DHGroupNumbersRequestListValue       `json:"phase2DHGroupNumbers,omitempty"`
	Phase2EncryptionAlgorithms []*Phase2EncryptionAlgorithmsRequestListValue `json:"phase2EncryptionAlgorithms,omitempty"`
	Phase2IntegrityAlgorithms  []*Phase2IntegrityAlgorithmsRequestListValue  `json:"phase2IntegrityAlgorithms,omitempty"`
	Phase2LifetimeSeconds      *int64                                        `json:"phase2LifetimeSeconds,omitempty"`
	PreSharedKey               *string                                       `json:"preSharedKey,omitempty"`
	RekeyFuzzPercentage        *int64                                        `json:"rekeyFuzzPercentage,omitempty"`
	RekeyMarginTimeSeconds     *int64                                        `json:"rekeyMarginTimeSeconds,omitempty"`
	ReplayWindowSize           *int64                                        `json:"replayWindowSize,omitempty"`
	StartupAction              *string                                       `json:"startupAction,omitempty"`
	TunnelInsideCIDR           *string                                       `json:"tunnelInsideCIDR,omitempty"`
	TunnelInsideIPv6CIDR       *string                                       `json:"tunnelInsideIPv6CIDR,omitempty"`
}

type MovingAddressStatus struct {
	PublicIP *string `json:"publicIP,omitempty"`
}

type NatGatewayAddress struct {
	AllocationID       *string `json:"allocationID,omitempty"`
	NetworkInterfaceID *string `json:"networkInterfaceID,omitempty"`
	PrivateIP          *string `json:"privateIP,omitempty"`
	PublicIP           *string `json:"publicIP,omitempty"`
}

type NatGateway_SDK struct {
	CreateTime           *metav1.Time          `json:"createTime,omitempty"`
	DeleteTime           *metav1.Time          `json:"deleteTime,omitempty"`
	FailureCode          *string               `json:"failureCode,omitempty"`
	FailureMessage       *string               `json:"failureMessage,omitempty"`
	NatGatewayAddresses  []*NatGatewayAddress  `json:"natGatewayAddresses,omitempty"`
	NatGatewayID         *string               `json:"natGatewayID,omitempty"`
	ProvisionedBandwidth *ProvisionedBandwidth `json:"provisionedBandwidth,omitempty"`
	State                *string               `json:"state,omitempty"`
	SubnetID             *string               `json:"subnetID,omitempty"`
	Tags                 []*Tag                `json:"tags,omitempty"`
	VPCID                *string               `json:"vpcID,omitempty"`
}

type NetworkACLAssociation struct {
	NetworkACLAssociationID *string `json:"networkACLAssociationID,omitempty"`
	NetworkACLID            *string `json:"networkACLID,omitempty"`
	SubnetID                *string `json:"subnetID,omitempty"`
}

type NetworkACLEntry_SDK struct {
	CIDRBlock     *string       `json:"cidrBlock,omitempty"`
	Egress        *bool         `json:"egress,omitempty"`
	ICMPTypeCode  *ICMPTypeCode `json:"icmpTypeCode,omitempty"`
	IPv6CIDRBlock *string       `json:"ipv6CIDRBlock,omitempty"`
	PortRange     *PortRange    `json:"portRange,omitempty"`
	Protocol      *string       `json:"protocol,omitempty"`
	RuleAction    *string       `json:"ruleAction,omitempty"`
	RuleNumber    *int64        `json:"ruleNumber,omitempty"`
}

type NetworkACL_SDK struct {
	Associations []*NetworkACLAssociation `json:"associations,omitempty"`
	Entries      []*NetworkACLEntry_SDK   `json:"entries,omitempty"`
	IsDefault    *bool                    `json:"isDefault,omitempty"`
	NetworkACLID *string                  `json:"networkACLID,omitempty"`
	OwnerID      *string                  `json:"ownerID,omitempty"`
	Tags         []*Tag                   `json:"tags,omitempty"`
	VPCID        *string                  `json:"vpcID,omitempty"`
}

type NetworkInterfaceAssociation struct {
	AllocationID    *string `json:"allocationID,omitempty"`
	AssociationID   *string `json:"associationID,omitempty"`
	CarrierIP       *string `json:"carrierIP,omitempty"`
	CustomerOwnedIP *string `json:"customerOwnedIP,omitempty"`
	IPOwnerID       *string `json:"ipOwnerID,omitempty"`
	PublicDNSName   *string `json:"publicDNSName,omitempty"`
	PublicIP        *string `json:"publicIP,omitempty"`
}

type NetworkInterfaceAttachment struct {
	AttachTime          *metav1.Time `json:"attachTime,omitempty"`
	AttachmentID        *string      `json:"attachmentID,omitempty"`
	DeleteOnTermination *bool        `json:"deleteOnTermination,omitempty"`
	DeviceIndex         *int64       `json:"deviceIndex,omitempty"`
	InstanceID          *string      `json:"instanceID,omitempty"`
	InstanceOwnerID     *string      `json:"instanceOwnerID,omitempty"`
	Status              *string      `json:"status,omitempty"`
}

type NetworkInterfaceAttachmentChanges struct {
	DeleteOnTermination *bool `json:"deleteOnTermination,omitempty"`
}

type NetworkInterfaceIPv6Address struct {
	IPv6Address *string `json:"ipv6Address,omitempty"`
}

type NetworkInterfacePermissionState struct {
	State         *string `json:"state,omitempty"`
	StatusMessage *string `json:"statusMessage,omitempty"`
}

type NetworkInterfacePermission_SDK struct {
	AWSAccountID                 *string                          `json:"awsAccountID,omitempty"`
	AWSService                   *string                          `json:"awsService,omitempty"`
	NetworkInterfaceID           *string                          `json:"networkInterfaceID,omitempty"`
	NetworkInterfacePermissionID *string                          `json:"networkInterfacePermissionID,omitempty"`
	Permission                   *string                          `json:"permission,omitempty"`
	PermissionState              *NetworkInterfacePermissionState `json:"permissionState,omitempty"`
}

type NetworkInterfacePrivateIPAddress struct {
	Association      *NetworkInterfaceAssociation `json:"association,omitempty"`
	Primary          *bool                        `json:"primary,omitempty"`
	PrivateDNSName   *string                      `json:"privateDNSName,omitempty"`
	PrivateIPAddress *string                      `json:"privateIPAddress,omitempty"`
}

type NetworkInterface_SDK struct {
	Association        *NetworkInterfaceAssociation        `json:"association,omitempty"`
	Attachment         *NetworkInterfaceAttachment         `json:"attachment,omitempty"`
	AvailabilityZone   *string                             `json:"availabilityZone,omitempty"`
	Description        *string                             `json:"description,omitempty"`
	Groups             []*GroupIdentifier                  `json:"groups,omitempty"`
	InterfaceType      *string                             `json:"interfaceType,omitempty"`
	IPv6Addresses      []*NetworkInterfaceIPv6Address      `json:"ipv6Addresses,omitempty"`
	MacAddress         *string                             `json:"macAddress,omitempty"`
	NetworkInterfaceID *string                             `json:"networkInterfaceID,omitempty"`
	OutpostARN         *string                             `json:"outpostARN,omitempty"`
	OwnerID            *string                             `json:"ownerID,omitempty"`
	PrivateDNSName     *string                             `json:"privateDNSName,omitempty"`
	PrivateIPAddress   *string                             `json:"privateIPAddress,omitempty"`
	PrivateIPAddresses []*NetworkInterfacePrivateIPAddress `json:"privateIPAddresses,omitempty"`
	RequesterID        *string                             `json:"requesterID,omitempty"`
	RequesterManaged   *bool                               `json:"requesterManaged,omitempty"`
	SourceDestCheck    *bool                               `json:"sourceDestCheck,omitempty"`
	Status             *string                             `json:"status,omitempty"`
	SubnetID           *string                             `json:"subnetID,omitempty"`
	TagSet             []*Tag                              `json:"tagSet,omitempty"`
	VPCID              *string                             `json:"vpcID,omitempty"`
}

type NewDHCPConfiguration struct {
	Key    *string   `json:"key,omitempty"`
	Values []*string `json:"values,omitempty"`
}

type OnDemandOptions struct {
	AllocationStrategy         *string                     `json:"allocationStrategy,omitempty"`
	CapacityReservationOptions *CapacityReservationOptions `json:"capacityReservationOptions,omitempty"`
	MaxTotalPrice              *string                     `json:"maxTotalPrice,omitempty"`
	MinTargetCapacity          *int64                      `json:"minTargetCapacity,omitempty"`
	SingleAvailabilityZone     *bool                       `json:"singleAvailabilityZone,omitempty"`
	SingleInstanceType         *bool                       `json:"singleInstanceType,omitempty"`
}

type OnDemandOptionsRequest struct {
	AllocationStrategy         *string                            `json:"allocationStrategy,omitempty"`
	CapacityReservationOptions *CapacityReservationOptionsRequest `json:"capacityReservationOptions,omitempty"`
	MaxTotalPrice              *string                            `json:"maxTotalPrice,omitempty"`
	MinTargetCapacity          *int64                             `json:"minTargetCapacity,omitempty"`
	SingleAvailabilityZone     *bool                              `json:"singleAvailabilityZone,omitempty"`
	SingleInstanceType         *bool                              `json:"singleInstanceType,omitempty"`
}

type PciID struct {
	DeviceID          *string `json:"deviceID,omitempty"`
	SubsystemID       *string `json:"subsystemID,omitempty"`
	SubsystemVendorID *string `json:"subsystemVendorID,omitempty"`
	VendorID          *string `json:"vendorID,omitempty"`
}

type PeeringAttachmentStatus struct {
	Code    *string `json:"code,omitempty"`
	Message *string `json:"message,omitempty"`
}

type PeeringConnectionOptions struct {
	AllowDNSResolutionFromRemoteVPC            *bool `json:"allowDNSResolutionFromRemoteVPC,omitempty"`
	AllowEgressFromLocalClassicLinkToRemoteVPC *bool `json:"allowEgressFromLocalClassicLinkToRemoteVPC,omitempty"`
	AllowEgressFromLocalVPCToRemoteClassicLink *bool `json:"allowEgressFromLocalVPCToRemoteClassicLink,omitempty"`
}

type PeeringConnectionOptionsRequest struct {
	AllowDNSResolutionFromRemoteVPC            *bool `json:"allowDNSResolutionFromRemoteVPC,omitempty"`
	AllowEgressFromLocalClassicLinkToRemoteVPC *bool `json:"allowEgressFromLocalClassicLinkToRemoteVPC,omitempty"`
	AllowEgressFromLocalVPCToRemoteClassicLink *bool `json:"allowEgressFromLocalVPCToRemoteClassicLink,omitempty"`
}

type PeeringTgwInfo struct {
	OwnerID          *string `json:"ownerID,omitempty"`
	Region           *string `json:"region,omitempty"`
	TransitGatewayID *string `json:"transitGatewayID,omitempty"`
}

type Phase1DHGroupNumbersListValue struct {
	Value *int64 `json:"value,omitempty"`
}

type Phase1DHGroupNumbersRequestListValue struct {
	Value *int64 `json:"value,omitempty"`
}

type Phase1EncryptionAlgorithmsListValue struct {
	Value *string `json:"value,omitempty"`
}

type Phase1EncryptionAlgorithmsRequestListValue struct {
	Value *string `json:"value,omitempty"`
}

type Phase1IntegrityAlgorithmsListValue struct {
	Value *string `json:"value,omitempty"`
}

type Phase1IntegrityAlgorithmsRequestListValue struct {
	Value *string `json:"value,omitempty"`
}

type Phase2DHGroupNumbersListValue struct {
	Value *int64 `json:"value,omitempty"`
}

type Phase2DHGroupNumbersRequestListValue struct {
	Value *int64 `json:"value,omitempty"`
}

type Phase2EncryptionAlgorithmsListValue struct {
	Value *string `json:"value,omitempty"`
}

type Phase2EncryptionAlgorithmsRequestListValue struct {
	Value *string `json:"value,omitempty"`
}

type Phase2IntegrityAlgorithmsListValue struct {
	Value *string `json:"value,omitempty"`
}

type Phase2IntegrityAlgorithmsRequestListValue struct {
	Value *string `json:"value,omitempty"`
}

type Placement struct {
	Affinity             *string `json:"affinity,omitempty"`
	AvailabilityZone     *string `json:"availabilityZone,omitempty"`
	GroupName            *string `json:"groupName,omitempty"`
	HostID               *string `json:"hostID,omitempty"`
	HostResourceGroupARN *string `json:"hostResourceGroupARN,omitempty"`
	PartitionNumber      *int64  `json:"partitionNumber,omitempty"`
	SpreadDomain         *string `json:"spreadDomain,omitempty"`
	Tenancy              *string `json:"tenancy,omitempty"`
}

type PlacementGroup_SDK struct {
	GroupID        *string `json:"groupID,omitempty"`
	GroupName      *string `json:"groupName,omitempty"`
	PartitionCount *int64  `json:"partitionCount,omitempty"`
	State          *string `json:"state,omitempty"`
	Strategy       *string `json:"strategy,omitempty"`
	Tags           []*Tag  `json:"tags,omitempty"`
}

type PlacementResponse struct {
	GroupName *string `json:"groupName,omitempty"`
}

type PoolCIDRBlock struct {
	CIDR *string `json:"cidr,omitempty"`
}

type PortRange struct {
	From *int64 `json:"from,omitempty"`
	To   *int64 `json:"to,omitempty"`
}

type PrefixList struct {
	CIDRs          []*string `json:"cidrs,omitempty"`
	PrefixListID   *string   `json:"prefixListID,omitempty"`
	PrefixListName *string   `json:"prefixListName,omitempty"`
}

type PrefixListAssociation struct {
	ResourceID    *string `json:"resourceID,omitempty"`
	ResourceOwner *string `json:"resourceOwner,omitempty"`
}

type PrefixListEntry struct {
	CIDR        *string `json:"cidr,omitempty"`
	Description *string `json:"description,omitempty"`
}

type PrefixListID struct {
	Description  *string `json:"description,omitempty"`
	PrefixListID *string `json:"prefixListID,omitempty"`
}

type PriceSchedule struct {
	Active       *bool    `json:"active,omitempty"`
	CurrencyCode *string  `json:"currencyCode,omitempty"`
	Price        *float64 `json:"price,omitempty"`
	Term         *int64   `json:"term,omitempty"`
}

type PriceScheduleSpecification struct {
	CurrencyCode *string  `json:"currencyCode,omitempty"`
	Price        *float64 `json:"price,omitempty"`
	Term         *int64   `json:"term,omitempty"`
}

type PricingDetail struct {
	Count *int64   `json:"count,omitempty"`
	Price *float64 `json:"price,omitempty"`
}

type PrincipalIDFormat struct {
	ARN *string `json:"arn,omitempty"`
}

type PrivateDNSNameConfiguration struct {
	Name  *string `json:"name,omitempty"`
	State *string `json:"state,omitempty"`
	Type  *string `json:"type_,omitempty"`
	Value *string `json:"value,omitempty"`
}

type PrivateIPAddressSpecification struct {
	Primary          *bool   `json:"primary,omitempty"`
	PrivateIPAddress *string `json:"privateIPAddress,omitempty"`
}

type ProductCode struct {
	ProductCodeID   *string `json:"productCodeID,omitempty"`
	ProductCodeType *string `json:"productCodeType,omitempty"`
}

type PropagatingVGW struct {
	GatewayID *string `json:"gatewayID,omitempty"`
}

type ProvisionedBandwidth struct {
	ProvisionTime *metav1.Time `json:"provisionTime,omitempty"`
	Provisioned   *string      `json:"provisioned,omitempty"`
	RequestTime   *metav1.Time `json:"requestTime,omitempty"`
	Requested     *string      `json:"requested,omitempty"`
	Status        *string      `json:"status,omitempty"`
}

type PublicIPv4Pool struct {
	Description                *string `json:"description,omitempty"`
	NetworkBorderGroup         *string `json:"networkBorderGroup,omitempty"`
	PoolID                     *string `json:"poolID,omitempty"`
	Tags                       []*Tag  `json:"tags,omitempty"`
	TotalAddressCount          *int64  `json:"totalAddressCount,omitempty"`
	TotalAvailableAddressCount *int64  `json:"totalAvailableAddressCount,omitempty"`
}

type PublicIPv4PoolRange struct {
	AddressCount          *int64  `json:"addressCount,omitempty"`
	AvailableAddressCount *int64  `json:"availableAddressCount,omitempty"`
	FirstAddress          *string `json:"firstAddress,omitempty"`
	LastAddress           *string `json:"lastAddress,omitempty"`
}

type Purchase struct {
	CurrencyCode      *string `json:"currencyCode,omitempty"`
	Duration          *int64  `json:"duration,omitempty"`
	HostReservationID *string `json:"hostReservationID,omitempty"`
	HourlyPrice       *string `json:"hourlyPrice,omitempty"`
	InstanceFamily    *string `json:"instanceFamily,omitempty"`
	UpfrontPrice      *string `json:"upfrontPrice,omitempty"`
}

type PurchaseRequest struct {
	InstanceCount *int64  `json:"instanceCount,omitempty"`
	PurchaseToken *string `json:"purchaseToken,omitempty"`
}

type RecurringCharge struct {
	Amount *float64 `json:"amount,omitempty"`
}

type Region struct {
	Endpoint    *string `json:"endpoint,omitempty"`
	OptInStatus *string `json:"optInStatus,omitempty"`
	RegionName  *string `json:"regionName,omitempty"`
}

type RegisterInstanceTagAttributeRequest struct {
	IncludeAllTagsOfInstance *bool `json:"includeAllTagsOfInstance,omitempty"`
}

type RemovePrefixListEntry struct {
	CIDR *string `json:"cidr,omitempty"`
}

type RequestLaunchTemplateData struct {
	BlockDeviceMappings               []*LaunchTemplateBlockDeviceMappingRequest                    `json:"blockDeviceMappings,omitempty"`
	CapacityReservationSpecification  *LaunchTemplateCapacityReservationSpecificationRequest        `json:"capacityReservationSpecification,omitempty"`
	CPUOptions                        *LaunchTemplateCPUOptionsRequest                              `json:"cpuOptions,omitempty"`
	CreditSpecification               *CreditSpecificationRequest                                   `json:"creditSpecification,omitempty"`
	DisableAPITermination             *bool                                                         `json:"disableAPITermination,omitempty"`
	EBSOptimized                      *bool                                                         `json:"ebsOptimized,omitempty"`
	ElasticGPUSpecifications          []*ElasticGPUSpecification                                    `json:"elasticGPUSpecifications,omitempty"`
	ElasticInferenceAccelerators      []*LaunchTemplateElasticInferenceAccelerator                  `json:"elasticInferenceAccelerators,omitempty"`
	HibernationOptions                *LaunchTemplateHibernationOptionsRequest                      `json:"hibernationOptions,omitempty"`
	IAMInstanceProfile                *LaunchTemplateIAMInstanceProfileSpecificationRequest         `json:"iamInstanceProfile,omitempty"`
	ImageID                           *string                                                       `json:"imageID,omitempty"`
	InstanceInitiatedShutdownBehavior *string                                                       `json:"instanceInitiatedShutdownBehavior,omitempty"`
	InstanceMarketOptions             *LaunchTemplateInstanceMarketOptionsRequest                   `json:"instanceMarketOptions,omitempty"`
	InstanceType                      *string                                                       `json:"instanceType,omitempty"`
	KernelID                          *string                                                       `json:"kernelID,omitempty"`
	KeyName                           *string                                                       `json:"keyName,omitempty"`
	LicenseSpecifications             []*LaunchTemplateLicenseConfigurationRequest                  `json:"licenseSpecifications,omitempty"`
	MetadataOptions                   *LaunchTemplateInstanceMetadataOptionsRequest                 `json:"metadataOptions,omitempty"`
	Monitoring                        *LaunchTemplatesMonitoringRequest                             `json:"monitoring,omitempty"`
	NetworkInterfaces                 []*LaunchTemplateInstanceNetworkInterfaceSpecificationRequest `json:"networkInterfaces,omitempty"`
	Placement                         *LaunchTemplatePlacementRequest                               `json:"placement,omitempty"`
	RamDiskID                         *string                                                       `json:"ramDiskID,omitempty"`
	SecurityGroupIDs                  []*string                                                     `json:"securityGroupIDs,omitempty"`
	SecurityGroups                    []*string                                                     `json:"securityGroups,omitempty"`
	TagSpecifications                 []*LaunchTemplateTagSpecificationRequest                      `json:"tagSpecifications,omitempty"`
	UserData                          *string                                                       `json:"userData,omitempty"`
}

type RequestSpotLaunchSpecification struct {
	AddressingType      *string               `json:"addressingType,omitempty"`
	BlockDeviceMappings []*BlockDeviceMapping `json:"blockDeviceMappings,omitempty"`
	EBSOptimized        *bool                 `json:"ebsOptimized,omitempty"`
	ImageID             *string               `json:"imageID,omitempty"`
	InstanceType        *string               `json:"instanceType,omitempty"`
	KernelID            *string               `json:"kernelID,omitempty"`
	KeyName             *string               `json:"keyName,omitempty"`
	RamdiskID           *string               `json:"ramdiskID,omitempty"`
	SubnetID            *string               `json:"subnetID,omitempty"`
	UserData            *string               `json:"userData,omitempty"`
}

type ReservationValue struct {
	HourlyPrice           *string `json:"hourlyPrice,omitempty"`
	RemainingTotalValue   *string `json:"remainingTotalValue,omitempty"`
	RemainingUpfrontValue *string `json:"remainingUpfrontValue,omitempty"`
}

type ReservedInstanceLimitPrice struct {
	Amount       *float64 `json:"amount,omitempty"`
	CurrencyCode *string  `json:"currencyCode,omitempty"`
}

type ReservedInstanceReservationValue struct {
	ReservedInstanceID *string `json:"reservedInstanceID,omitempty"`
}

type ReservedInstances struct {
	AvailabilityZone    *string      `json:"availabilityZone,omitempty"`
	CurrencyCode        *string      `json:"currencyCode,omitempty"`
	Duration            *int64       `json:"duration,omitempty"`
	End                 *metav1.Time `json:"end,omitempty"`
	InstanceCount       *int64       `json:"instanceCount,omitempty"`
	InstanceTenancy     *string      `json:"instanceTenancy,omitempty"`
	InstanceType        *string      `json:"instanceType,omitempty"`
	ReservedInstancesID *string      `json:"reservedInstancesID,omitempty"`
	Start               *metav1.Time `json:"start,omitempty"`
	Tags                []*Tag       `json:"tags,omitempty"`
}

type ReservedInstancesConfiguration struct {
	AvailabilityZone *string `json:"availabilityZone,omitempty"`
	InstanceCount    *int64  `json:"instanceCount,omitempty"`
	InstanceType     *string `json:"instanceType,omitempty"`
	Platform         *string `json:"platform,omitempty"`
}

type ReservedInstancesID struct {
	ReservedInstancesID *string `json:"reservedInstancesID,omitempty"`
}

type ReservedInstancesListing_SDK struct {
	ClientToken                *string          `json:"clientToken,omitempty"`
	CreateDate                 *metav1.Time     `json:"createDate,omitempty"`
	InstanceCounts             []*InstanceCount `json:"instanceCounts,omitempty"`
	PriceSchedules             []*PriceSchedule `json:"priceSchedules,omitempty"`
	ReservedInstancesID        *string          `json:"reservedInstancesID,omitempty"`
	ReservedInstancesListingID *string          `json:"reservedInstancesListingID,omitempty"`
	Status                     *string          `json:"status,omitempty"`
	StatusMessage              *string          `json:"statusMessage,omitempty"`
	Tags                       []*Tag           `json:"tags,omitempty"`
	UpdateDate                 *metav1.Time     `json:"updateDate,omitempty"`
}

type ReservedInstancesModification struct {
	ClientToken                     *string      `json:"clientToken,omitempty"`
	CreateDate                      *metav1.Time `json:"createDate,omitempty"`
	EffectiveDate                   *metav1.Time `json:"effectiveDate,omitempty"`
	ReservedInstancesModificationID *string      `json:"reservedInstancesModificationID,omitempty"`
	Status                          *string      `json:"status,omitempty"`
	StatusMessage                   *string      `json:"statusMessage,omitempty"`
	UpdateDate                      *metav1.Time `json:"updateDate,omitempty"`
}

type ReservedInstancesModificationResult struct {
	ReservedInstancesID *string `json:"reservedInstancesID,omitempty"`
}

type ReservedInstancesOffering struct {
	AvailabilityZone            *string `json:"availabilityZone,omitempty"`
	CurrencyCode                *string `json:"currencyCode,omitempty"`
	Duration                    *int64  `json:"duration,omitempty"`
	InstanceTenancy             *string `json:"instanceTenancy,omitempty"`
	InstanceType                *string `json:"instanceType,omitempty"`
	Marketplace                 *bool   `json:"marketplace,omitempty"`
	ReservedInstancesOfferingID *string `json:"reservedInstancesOfferingID,omitempty"`
}

type ResponseError struct {
	Message *string `json:"message,omitempty"`
}

type ResponseLaunchTemplateData struct {
	BlockDeviceMappings               []*LaunchTemplateBlockDeviceMapping                     `json:"blockDeviceMappings,omitempty"`
	CapacityReservationSpecification  *LaunchTemplateCapacityReservationSpecificationResponse `json:"capacityReservationSpecification,omitempty"`
	CPUOptions                        *LaunchTemplateCPUOptions                               `json:"cpuOptions,omitempty"`
	CreditSpecification               *CreditSpecification                                    `json:"creditSpecification,omitempty"`
	DisableAPITermination             *bool                                                   `json:"disableAPITermination,omitempty"`
	EBSOptimized                      *bool                                                   `json:"ebsOptimized,omitempty"`
	ElasticGPUSpecifications          []*ElasticGPUSpecificationResponse                      `json:"elasticGPUSpecifications,omitempty"`
	ElasticInferenceAccelerators      []*LaunchTemplateElasticInferenceAcceleratorResponse    `json:"elasticInferenceAccelerators,omitempty"`
	HibernationOptions                *LaunchTemplateHibernationOptions                       `json:"hibernationOptions,omitempty"`
	IAMInstanceProfile                *LaunchTemplateIAMInstanceProfileSpecification          `json:"iamInstanceProfile,omitempty"`
	ImageID                           *string                                                 `json:"imageID,omitempty"`
	InstanceInitiatedShutdownBehavior *string                                                 `json:"instanceInitiatedShutdownBehavior,omitempty"`
	InstanceMarketOptions             *LaunchTemplateInstanceMarketOptions                    `json:"instanceMarketOptions,omitempty"`
	InstanceType                      *string                                                 `json:"instanceType,omitempty"`
	KernelID                          *string                                                 `json:"kernelID,omitempty"`
	KeyName                           *string                                                 `json:"keyName,omitempty"`
	LicenseSpecifications             []*LaunchTemplateLicenseConfiguration                   `json:"licenseSpecifications,omitempty"`
	MetadataOptions                   *LaunchTemplateInstanceMetadataOptions                  `json:"metadataOptions,omitempty"`
	Monitoring                        *LaunchTemplatesMonitoring                              `json:"monitoring,omitempty"`
	NetworkInterfaces                 []*LaunchTemplateInstanceNetworkInterfaceSpecification  `json:"networkInterfaces,omitempty"`
	Placement                         *LaunchTemplatePlacement                                `json:"placement,omitempty"`
	RamDiskID                         *string                                                 `json:"ramDiskID,omitempty"`
	SecurityGroupIDs                  []*string                                               `json:"securityGroupIDs,omitempty"`
	SecurityGroups                    []*string                                               `json:"securityGroups,omitempty"`
	TagSpecifications                 []*LaunchTemplateTagSpecification                       `json:"tagSpecifications,omitempty"`
	UserData                          *string                                                 `json:"userData,omitempty"`
}

type RouteTableAssociation struct {
	AssociationState        *RouteTableAssociationState `json:"associationState,omitempty"`
	GatewayID               *string                     `json:"gatewayID,omitempty"`
	Main                    *bool                       `json:"main,omitempty"`
	RouteTableAssociationID *string                     `json:"routeTableAssociationID,omitempty"`
	RouteTableID            *string                     `json:"routeTableID,omitempty"`
	SubnetID                *string                     `json:"subnetID,omitempty"`
}

type RouteTableAssociationState struct {
	State         *string `json:"state,omitempty"`
	StatusMessage *string `json:"statusMessage,omitempty"`
}

type RouteTable_SDK struct {
	Associations    []*RouteTableAssociation `json:"associations,omitempty"`
	OwnerID         *string                  `json:"ownerID,omitempty"`
	PropagatingVGWs []*PropagatingVGW        `json:"propagatingVGWs,omitempty"`
	RouteTableID    *string                  `json:"routeTableID,omitempty"`
	Routes          []*Route_SDK             `json:"routes,omitempty"`
	Tags            []*Tag                   `json:"tags,omitempty"`
	VPCID           *string                  `json:"vpcID,omitempty"`
}

type Route_SDK struct {
	CarrierGatewayID            *string `json:"carrierGatewayID,omitempty"`
	DestinationCIDRBlock        *string `json:"destinationCIDRBlock,omitempty"`
	DestinationIPv6CIDRBlock    *string `json:"destinationIPv6CIDRBlock,omitempty"`
	DestinationPrefixListID     *string `json:"destinationPrefixListID,omitempty"`
	EgressOnlyInternetGatewayID *string `json:"egressOnlyInternetGatewayID,omitempty"`
	GatewayID                   *string `json:"gatewayID,omitempty"`
	InstanceID                  *string `json:"instanceID,omitempty"`
	InstanceOwnerID             *string `json:"instanceOwnerID,omitempty"`
	LocalGatewayID              *string `json:"localGatewayID,omitempty"`
	NatGatewayID                *string `json:"natGatewayID,omitempty"`
	NetworkInterfaceID          *string `json:"networkInterfaceID,omitempty"`
	Origin                      *string `json:"origin,omitempty"`
	State                       *string `json:"state,omitempty"`
	TransitGatewayID            *string `json:"transitGatewayID,omitempty"`
	VPCPeeringConnectionID      *string `json:"vpcPeeringConnectionID,omitempty"`
}

type RunInstancesMonitoringEnabled struct {
	Enabled *bool `json:"enabled,omitempty"`
}

type S3Storage struct {
	AWSAccessKeyID        *string `json:"awsAccessKeyID,omitempty"`
	Bucket                *string `json:"bucket,omitempty"`
	Prefix                *string `json:"prefix,omitempty"`
	UploadPolicySignature *string `json:"uploadPolicySignature,omitempty"`
}

type ScheduledInstance struct {
	AvailabilityZone            *string      `json:"availabilityZone,omitempty"`
	CreateDate                  *metav1.Time `json:"createDate,omitempty"`
	HourlyPrice                 *string      `json:"hourlyPrice,omitempty"`
	InstanceCount               *int64       `json:"instanceCount,omitempty"`
	InstanceType                *string      `json:"instanceType,omitempty"`
	NetworkPlatform             *string      `json:"networkPlatform,omitempty"`
	NextSlotStartTime           *metav1.Time `json:"nextSlotStartTime,omitempty"`
	Platform                    *string      `json:"platform,omitempty"`
	PreviousSlotEndTime         *metav1.Time `json:"previousSlotEndTime,omitempty"`
	ScheduledInstanceID         *string      `json:"scheduledInstanceID,omitempty"`
	SlotDurationInHours         *int64       `json:"slotDurationInHours,omitempty"`
	TermEndDate                 *metav1.Time `json:"termEndDate,omitempty"`
	TermStartDate               *metav1.Time `json:"termStartDate,omitempty"`
	TotalScheduledInstanceHours *int64       `json:"totalScheduledInstanceHours,omitempty"`
}

type ScheduledInstanceAvailability struct {
	AvailabilityZone            *string      `json:"availabilityZone,omitempty"`
	AvailableInstanceCount      *int64       `json:"availableInstanceCount,omitempty"`
	FirstSlotStartTime          *metav1.Time `json:"firstSlotStartTime,omitempty"`
	HourlyPrice                 *string      `json:"hourlyPrice,omitempty"`
	InstanceType                *string      `json:"instanceType,omitempty"`
	MaxTermDurationInDays       *int64       `json:"maxTermDurationInDays,omitempty"`
	MinTermDurationInDays       *int64       `json:"minTermDurationInDays,omitempty"`
	NetworkPlatform             *string      `json:"networkPlatform,omitempty"`
	Platform                    *string      `json:"platform,omitempty"`
	PurchaseToken               *string      `json:"purchaseToken,omitempty"`
	SlotDurationInHours         *int64       `json:"slotDurationInHours,omitempty"`
	TotalScheduledInstanceHours *int64       `json:"totalScheduledInstanceHours,omitempty"`
}

type ScheduledInstanceRecurrence struct {
	Frequency               *string `json:"frequency,omitempty"`
	Interval                *int64  `json:"interval,omitempty"`
	OccurrenceRelativeToEnd *bool   `json:"occurrenceRelativeToEnd,omitempty"`
	OccurrenceUnit          *string `json:"occurrenceUnit,omitempty"`
}

type ScheduledInstanceRecurrenceRequest struct {
	Frequency               *string `json:"frequency,omitempty"`
	Interval                *int64  `json:"interval,omitempty"`
	OccurrenceRelativeToEnd *bool   `json:"occurrenceRelativeToEnd,omitempty"`
	OccurrenceUnit          *string `json:"occurrenceUnit,omitempty"`
}

type ScheduledInstancesBlockDeviceMapping struct {
	DeviceName  *string `json:"deviceName,omitempty"`
	NoDevice    *string `json:"noDevice,omitempty"`
	VirtualName *string `json:"virtualName,omitempty"`
}

type ScheduledInstancesEBS struct {
	DeleteOnTermination *bool   `json:"deleteOnTermination,omitempty"`
	Encrypted           *bool   `json:"encrypted,omitempty"`
	IOPS                *int64  `json:"iops,omitempty"`
	SnapshotID          *string `json:"snapshotID,omitempty"`
	VolumeSize          *int64  `json:"volumeSize,omitempty"`
	VolumeType          *string `json:"volumeType,omitempty"`
}

type ScheduledInstancesIAMInstanceProfile struct {
	ARN  *string `json:"arn,omitempty"`
	Name *string `json:"name,omitempty"`
}

type ScheduledInstancesLaunchSpecification struct {
	EBSOptimized *bool   `json:"ebsOptimized,omitempty"`
	ImageID      *string `json:"imageID,omitempty"`
	InstanceType *string `json:"instanceType,omitempty"`
	KernelID     *string `json:"kernelID,omitempty"`
	KeyName      *string `json:"keyName,omitempty"`
	RamdiskID    *string `json:"ramdiskID,omitempty"`
	SubnetID     *string `json:"subnetID,omitempty"`
	UserData     *string `json:"userData,omitempty"`
}

type ScheduledInstancesMonitoring struct {
	Enabled *bool `json:"enabled,omitempty"`
}

type ScheduledInstancesNetworkInterface struct {
	AssociatePublicIPAddress       *bool   `json:"associatePublicIPAddress,omitempty"`
	DeleteOnTermination            *bool   `json:"deleteOnTermination,omitempty"`
	Description                    *string `json:"description,omitempty"`
	DeviceIndex                    *int64  `json:"deviceIndex,omitempty"`
	IPv6AddressCount               *int64  `json:"ipv6AddressCount,omitempty"`
	NetworkInterfaceID             *string `json:"networkInterfaceID,omitempty"`
	PrivateIPAddress               *string `json:"privateIPAddress,omitempty"`
	SecondaryPrivateIPAddressCount *int64  `json:"secondaryPrivateIPAddressCount,omitempty"`
	SubnetID                       *string `json:"subnetID,omitempty"`
}

type ScheduledInstancesPlacement struct {
	AvailabilityZone *string `json:"availabilityZone,omitempty"`
	GroupName        *string `json:"groupName,omitempty"`
}

type ScheduledInstancesPrivateIPAddressConfig struct {
	Primary          *bool   `json:"primary,omitempty"`
	PrivateIPAddress *string `json:"privateIPAddress,omitempty"`
}

type SecurityGroupIdentifier struct {
	GroupID   *string `json:"groupID,omitempty"`
	GroupName *string `json:"groupName,omitempty"`
}

type SecurityGroupReference struct {
	GroupID                *string `json:"groupID,omitempty"`
	ReferencingVPCID       *string `json:"referencingVPCID,omitempty"`
	VPCPeeringConnectionID *string `json:"vpcPeeringConnectionID,omitempty"`
}

type SecurityGroup_SDK struct {
	Description         *string         `json:"description,omitempty"`
	GroupID             *string         `json:"groupID,omitempty"`
	GroupName           *string         `json:"groupName,omitempty"`
	IPPermissions       []*IPPermission `json:"ipPermissions,omitempty"`
	IPPermissionsEgress []*IPPermission `json:"ipPermissionsEgress,omitempty"`
	OwnerID             *string         `json:"ownerID,omitempty"`
	Tags                []*Tag          `json:"tags,omitempty"`
	VPCID               *string         `json:"vpcID,omitempty"`
}

type ServiceConfiguration struct {
	AcceptanceRequired          *bool                        `json:"acceptanceRequired,omitempty"`
	AvailabilityZones           []*string                    `json:"availabilityZones,omitempty"`
	BaseEndpointDNSNames        []*string                    `json:"baseEndpointDNSNames,omitempty"`
	ManagesVPCEndpoints         *bool                        `json:"managesVPCEndpoints,omitempty"`
	NetworkLoadBalancerARNs     []*string                    `json:"networkLoadBalancerARNs,omitempty"`
	PrivateDNSName              *string                      `json:"privateDNSName,omitempty"`
	PrivateDNSNameConfiguration *PrivateDNSNameConfiguration `json:"privateDNSNameConfiguration,omitempty"`
	ServiceID                   *string                      `json:"serviceID,omitempty"`
	ServiceName                 *string                      `json:"serviceName,omitempty"`
	ServiceState                *string                      `json:"serviceState,omitempty"`
	ServiceType                 []*ServiceTypeDetail         `json:"serviceType,omitempty"`
	Tags                        []*Tag                       `json:"tags,omitempty"`
}

type ServiceDetail struct {
	AcceptanceRequired              *bool                `json:"acceptanceRequired,omitempty"`
	AvailabilityZones               []*string            `json:"availabilityZones,omitempty"`
	BaseEndpointDNSNames            []*string            `json:"baseEndpointDNSNames,omitempty"`
	ManagesVPCEndpoints             *bool                `json:"managesVPCEndpoints,omitempty"`
	Owner                           *string              `json:"owner,omitempty"`
	PrivateDNSName                  *string              `json:"privateDNSName,omitempty"`
	PrivateDNSNameVerificationState *string              `json:"privateDNSNameVerificationState,omitempty"`
	ServiceID                       *string              `json:"serviceID,omitempty"`
	ServiceName                     *string              `json:"serviceName,omitempty"`
	ServiceType                     []*ServiceTypeDetail `json:"serviceType,omitempty"`
	Tags                            []*Tag               `json:"tags,omitempty"`
	VPCEndpointPolicySupported      *bool                `json:"vpcEndpointPolicySupported,omitempty"`
}

type ServiceTypeDetail struct {
	ServiceType *string `json:"serviceType,omitempty"`
}

type SlotDateTimeRangeRequest struct {
	EarliestTime *metav1.Time `json:"earliestTime,omitempty"`
	LatestTime   *metav1.Time `json:"latestTime,omitempty"`
}

type SlotStartTimeRangeRequest struct {
	EarliestTime *metav1.Time `json:"earliestTime,omitempty"`
	LatestTime   *metav1.Time `json:"latestTime,omitempty"`
}

type SnapshotDetail struct {
	Description   *string  `json:"description,omitempty"`
	DeviceName    *string  `json:"deviceName,omitempty"`
	DiskImageSize *float64 `json:"diskImageSize,omitempty"`
	Format        *string  `json:"format,omitempty"`
	Progress      *string  `json:"progress,omitempty"`
	SnapshotID    *string  `json:"snapshotID,omitempty"`
	Status        *string  `json:"status,omitempty"`
	StatusMessage *string  `json:"statusMessage,omitempty"`
	URL           *string  `json:"url,omitempty"`
}

type SnapshotDiskContainer struct {
	Description *string `json:"description,omitempty"`
	Format      *string `json:"format,omitempty"`
	URL         *string `json:"url,omitempty"`
}

type SnapshotInfo struct {
	Description *string      `json:"description,omitempty"`
	Encrypted   *bool        `json:"encrypted,omitempty"`
	OwnerID     *string      `json:"ownerID,omitempty"`
	Progress    *string      `json:"progress,omitempty"`
	SnapshotID  *string      `json:"snapshotID,omitempty"`
	StartTime   *metav1.Time `json:"startTime,omitempty"`
	State       *string      `json:"state,omitempty"`
	Tags        []*Tag       `json:"tags,omitempty"`
	VolumeID    *string      `json:"volumeID,omitempty"`
	VolumeSize  *int64       `json:"volumeSize,omitempty"`
}

type SnapshotTaskDetail struct {
	Description   *string  `json:"description,omitempty"`
	DiskImageSize *float64 `json:"diskImageSize,omitempty"`
	Encrypted     *bool    `json:"encrypted,omitempty"`
	Format        *string  `json:"format,omitempty"`
	KMSKeyID      *string  `json:"kmsKeyID,omitempty"`
	Progress      *string  `json:"progress,omitempty"`
	SnapshotID    *string  `json:"snapshotID,omitempty"`
	Status        *string  `json:"status,omitempty"`
	StatusMessage *string  `json:"statusMessage,omitempty"`
	URL           *string  `json:"url,omitempty"`
}

type SpotDatafeedSubscription_SDK struct {
	Bucket  *string                 `json:"bucket,omitempty"`
	Fault   *SpotInstanceStateFault `json:"fault,omitempty"`
	OwnerID *string                 `json:"ownerID,omitempty"`
	Prefix  *string                 `json:"prefix,omitempty"`
	State   *string                 `json:"state,omitempty"`
}

type SpotFleetLaunchSpecification struct {
	AddressingType      *string               `json:"addressingType,omitempty"`
	BlockDeviceMappings []*BlockDeviceMapping `json:"blockDeviceMappings,omitempty"`
	EBSOptimized        *bool                 `json:"ebsOptimized,omitempty"`
	ImageID             *string               `json:"imageID,omitempty"`
	InstanceType        *string               `json:"instanceType,omitempty"`
	KernelID            *string               `json:"kernelID,omitempty"`
	KeyName             *string               `json:"keyName,omitempty"`
	RamdiskID           *string               `json:"ramdiskID,omitempty"`
	SecurityGroups      []*GroupIdentifier    `json:"securityGroups,omitempty"`
	SpotPrice           *string               `json:"spotPrice,omitempty"`
	SubnetID            *string               `json:"subnetID,omitempty"`
	UserData            *string               `json:"userData,omitempty"`
	WeightedCapacity    *float64              `json:"weightedCapacity,omitempty"`
}

type SpotFleetMonitoring struct {
	Enabled *bool `json:"enabled,omitempty"`
}

type SpotFleetRequestConfig struct {
	CreateTime         *metav1.Time `json:"createTime,omitempty"`
	SpotFleetRequestID *string      `json:"spotFleetRequestID,omitempty"`
	Tags               []*Tag       `json:"tags,omitempty"`
}

type SpotFleetRequestConfigData struct {
	ClientToken                      *string             `json:"clientToken,omitempty"`
	FulfilledCapacity                *float64            `json:"fulfilledCapacity,omitempty"`
	IAMFleetRole                     *string             `json:"iamFleetRole,omitempty"`
	InstanceInterruptionBehavior     *string             `json:"instanceInterruptionBehavior,omitempty"`
	InstancePoolsToUseCount          *int64              `json:"instancePoolsToUseCount,omitempty"`
	OnDemandFulfilledCapacity        *float64            `json:"onDemandFulfilledCapacity,omitempty"`
	OnDemandMaxTotalPrice            *string             `json:"onDemandMaxTotalPrice,omitempty"`
	OnDemandTargetCapacity           *int64              `json:"onDemandTargetCapacity,omitempty"`
	ReplaceUnhealthyInstances        *bool               `json:"replaceUnhealthyInstances,omitempty"`
	SpotMaxTotalPrice                *string             `json:"spotMaxTotalPrice,omitempty"`
	SpotPrice                        *string             `json:"spotPrice,omitempty"`
	TagSpecifications                []*TagSpecification `json:"tagSpecifications,omitempty"`
	TargetCapacity                   *int64              `json:"targetCapacity,omitempty"`
	TerminateInstancesWithExpiration *bool               `json:"terminateInstancesWithExpiration,omitempty"`
	Type                             *string             `json:"type_,omitempty"`
	ValidFrom                        *metav1.Time        `json:"validFrom,omitempty"`
	ValidUntil                       *metav1.Time        `json:"validUntil,omitempty"`
}

type SpotFleetTagSpecification struct {
	ResourceType *string `json:"resourceType,omitempty"`
	Tags         []*Tag  `json:"tags,omitempty"`
}

type SpotInstanceRequest struct {
	ActualBlockHourlyPrice       *string                 `json:"actualBlockHourlyPrice,omitempty"`
	AvailabilityZoneGroup        *string                 `json:"availabilityZoneGroup,omitempty"`
	BlockDurationMinutes         *int64                  `json:"blockDurationMinutes,omitempty"`
	CreateTime                   *metav1.Time            `json:"createTime,omitempty"`
	Fault                        *SpotInstanceStateFault `json:"fault,omitempty"`
	InstanceID                   *string                 `json:"instanceID,omitempty"`
	InstanceInterruptionBehavior *string                 `json:"instanceInterruptionBehavior,omitempty"`
	LaunchGroup                  *string                 `json:"launchGroup,omitempty"`
	LaunchedAvailabilityZone     *string                 `json:"launchedAvailabilityZone,omitempty"`
	SpotInstanceRequestID        *string                 `json:"spotInstanceRequestID,omitempty"`
	SpotPrice                    *string                 `json:"spotPrice,omitempty"`
	Tags                         []*Tag                  `json:"tags,omitempty"`
	Type                         *string                 `json:"type_,omitempty"`
	ValidFrom                    *metav1.Time            `json:"validFrom,omitempty"`
	ValidUntil                   *metav1.Time            `json:"validUntil,omitempty"`
}

type SpotInstanceStateFault struct {
	Code    *string `json:"code,omitempty"`
	Message *string `json:"message,omitempty"`
}

type SpotInstanceStatus struct {
	Code       *string      `json:"code,omitempty"`
	Message    *string      `json:"message,omitempty"`
	UpdateTime *metav1.Time `json:"updateTime,omitempty"`
}

type SpotMarketOptions struct {
	BlockDurationMinutes         *int64       `json:"blockDurationMinutes,omitempty"`
	InstanceInterruptionBehavior *string      `json:"instanceInterruptionBehavior,omitempty"`
	MaxPrice                     *string      `json:"maxPrice,omitempty"`
	SpotInstanceType             *string      `json:"spotInstanceType,omitempty"`
	ValidUntil                   *metav1.Time `json:"validUntil,omitempty"`
}

type SpotOptions struct {
	AllocationStrategy           *string `json:"allocationStrategy,omitempty"`
	InstanceInterruptionBehavior *string `json:"instanceInterruptionBehavior,omitempty"`
	InstancePoolsToUseCount      *int64  `json:"instancePoolsToUseCount,omitempty"`
	MaxTotalPrice                *string `json:"maxTotalPrice,omitempty"`
	MinTargetCapacity            *int64  `json:"minTargetCapacity,omitempty"`
	SingleAvailabilityZone       *bool   `json:"singleAvailabilityZone,omitempty"`
	SingleInstanceType           *bool   `json:"singleInstanceType,omitempty"`
}

type SpotOptionsRequest struct {
	AllocationStrategy           *string `json:"allocationStrategy,omitempty"`
	InstanceInterruptionBehavior *string `json:"instanceInterruptionBehavior,omitempty"`
	InstancePoolsToUseCount      *int64  `json:"instancePoolsToUseCount,omitempty"`
	MaxTotalPrice                *string `json:"maxTotalPrice,omitempty"`
	MinTargetCapacity            *int64  `json:"minTargetCapacity,omitempty"`
	SingleAvailabilityZone       *bool   `json:"singleAvailabilityZone,omitempty"`
	SingleInstanceType           *bool   `json:"singleInstanceType,omitempty"`
}

type SpotPlacement struct {
	AvailabilityZone *string `json:"availabilityZone,omitempty"`
	GroupName        *string `json:"groupName,omitempty"`
	Tenancy          *string `json:"tenancy,omitempty"`
}

type SpotPrice struct {
	AvailabilityZone *string      `json:"availabilityZone,omitempty"`
	InstanceType     *string      `json:"instanceType,omitempty"`
	SpotPrice        *string      `json:"spotPrice,omitempty"`
	Timestamp        *metav1.Time `json:"timestamp,omitempty"`
}

type StaleIPPermission struct {
	FromPort   *int64  `json:"fromPort,omitempty"`
	IPProtocol *string `json:"ipProtocol,omitempty"`
	ToPort     *int64  `json:"toPort,omitempty"`
}

type StaleSecurityGroup struct {
	Description *string `json:"description,omitempty"`
	GroupID     *string `json:"groupID,omitempty"`
	GroupName   *string `json:"groupName,omitempty"`
	VPCID       *string `json:"vpcID,omitempty"`
}

type StateReason struct {
	Code    *string `json:"code,omitempty"`
	Message *string `json:"message,omitempty"`
}

type StorageLocation struct {
	Bucket *string `json:"bucket,omitempty"`
	Key    *string `json:"key,omitempty"`
}

type SubnetAssociation struct {
	SubnetID *string `json:"subnetID,omitempty"`
}

type SubnetCIDRBlockState struct {
	State         *string `json:"state,omitempty"`
	StatusMessage *string `json:"statusMessage,omitempty"`
}

type SubnetIPv6CIDRBlockAssociation struct {
	AssociationID      *string               `json:"associationID,omitempty"`
	IPv6CIDRBlock      *string               `json:"ipv6CIDRBlock,omitempty"`
	IPv6CIDRBlockState *SubnetCIDRBlockState `json:"ipv6CIDRBlockState,omitempty"`
}

type Subnet_SDK struct {
	AssignIPv6AddressOnCreation *bool                             `json:"assignIPv6AddressOnCreation,omitempty"`
	AvailabilityZone            *string                           `json:"availabilityZone,omitempty"`
	AvailabilityZoneID          *string                           `json:"availabilityZoneID,omitempty"`
	AvailableIPAddressCount     *int64                            `json:"availableIPAddressCount,omitempty"`
	CIDRBlock                   *string                           `json:"cidrBlock,omitempty"`
	CustomerOwnedIPv4Pool       *string                           `json:"customerOwnedIPv4Pool,omitempty"`
	DefaultForAZ                *bool                             `json:"defaultForAZ,omitempty"`
	IPv6CIDRBlockAssociationSet []*SubnetIPv6CIDRBlockAssociation `json:"ipv6CIDRBlockAssociationSet,omitempty"`
	MapCustomerOwnedIPOnLaunch  *bool                             `json:"mapCustomerOwnedIPOnLaunch,omitempty"`
	MapPublicIPOnLaunch         *bool                             `json:"mapPublicIPOnLaunch,omitempty"`
	OutpostARN                  *string                           `json:"outpostARN,omitempty"`
	OwnerID                     *string                           `json:"ownerID,omitempty"`
	State                       *string                           `json:"state,omitempty"`
	SubnetARN                   *string                           `json:"subnetARN,omitempty"`
	SubnetID                    *string                           `json:"subnetID,omitempty"`
	Tags                        []*Tag                            `json:"tags,omitempty"`
	VPCID                       *string                           `json:"vpcID,omitempty"`
}

type SuccessfulInstanceCreditSpecificationItem struct {
	InstanceID *string `json:"instanceID,omitempty"`
}

type SuccessfulQueuedPurchaseDeletion struct {
	ReservedInstancesID *string `json:"reservedInstancesID,omitempty"`
}

type Tag struct {
	Key   *string `json:"key,omitempty"`
	Value *string `json:"value,omitempty"`
}

type TagDescription struct {
	Key          *string `json:"key,omitempty"`
	ResourceID   *string `json:"resourceID,omitempty"`
	ResourceType *string `json:"resourceType,omitempty"`
	Value        *string `json:"value,omitempty"`
}

type TagSpecification struct {
	ResourceType *string `json:"resourceType,omitempty"`
	Tags         []*Tag  `json:"tags,omitempty"`
}

type TargetCapacitySpecification struct {
	DefaultTargetCapacityType *string `json:"defaultTargetCapacityType,omitempty"`
	OnDemandTargetCapacity    *int64  `json:"onDemandTargetCapacity,omitempty"`
	SpotTargetCapacity        *int64  `json:"spotTargetCapacity,omitempty"`
	TotalTargetCapacity       *int64  `json:"totalTargetCapacity,omitempty"`
}

type TargetCapacitySpecificationRequest struct {
	DefaultTargetCapacityType *string `json:"defaultTargetCapacityType,omitempty"`
	OnDemandTargetCapacity    *int64  `json:"onDemandTargetCapacity,omitempty"`
	SpotTargetCapacity        *int64  `json:"spotTargetCapacity,omitempty"`
	TotalTargetCapacity       *int64  `json:"totalTargetCapacity,omitempty"`
}

type TargetConfiguration struct {
	InstanceCount *int64  `json:"instanceCount,omitempty"`
	OfferingID    *string `json:"offeringID,omitempty"`
}

type TargetConfigurationRequest struct {
	InstanceCount *int64 `json:"instanceCount,omitempty"`
}

type TargetGroup struct {
	ARN *string `json:"arn,omitempty"`
}

type TargetNetwork struct {
	AssociationID       *string   `json:"associationID,omitempty"`
	ClientVPNEndpointID *string   `json:"clientVPNEndpointID,omitempty"`
	SecurityGroups      []*string `json:"securityGroups,omitempty"`
	TargetNetworkID     *string   `json:"targetNetworkID,omitempty"`
	VPCID               *string   `json:"vpcID,omitempty"`
}

type TerminateConnectionStatus struct {
	ConnectionID *string `json:"connectionID,omitempty"`
}

type TrafficMirrorFilterRule_SDK struct {
	Description               *string                 `json:"description,omitempty"`
	DestinationCIDRBlock      *string                 `json:"destinationCIDRBlock,omitempty"`
	DestinationPortRange      *TrafficMirrorPortRange `json:"destinationPortRange,omitempty"`
	Protocol                  *int64                  `json:"protocol,omitempty"`
	RuleAction                *string                 `json:"ruleAction,omitempty"`
	RuleNumber                *int64                  `json:"ruleNumber,omitempty"`
	SourceCIDRBlock           *string                 `json:"sourceCIDRBlock,omitempty"`
	SourcePortRange           *TrafficMirrorPortRange `json:"sourcePortRange,omitempty"`
	TrafficDirection          *string                 `json:"trafficDirection,omitempty"`
	TrafficMirrorFilterID     *string                 `json:"trafficMirrorFilterID,omitempty"`
	TrafficMirrorFilterRuleID *string                 `json:"trafficMirrorFilterRuleID,omitempty"`
}

type TrafficMirrorFilter_SDK struct {
	Description           *string                        `json:"description,omitempty"`
	EgressFilterRules     []*TrafficMirrorFilterRule_SDK `json:"egressFilterRules,omitempty"`
	IngressFilterRules    []*TrafficMirrorFilterRule_SDK `json:"ingressFilterRules,omitempty"`
	NetworkServices       []*string                      `json:"networkServices,omitempty"`
	Tags                  []*Tag                         `json:"tags,omitempty"`
	TrafficMirrorFilterID *string                        `json:"trafficMirrorFilterID,omitempty"`
}

type TrafficMirrorPortRange struct {
	FromPort *int64 `json:"fromPort,omitempty"`
	ToPort   *int64 `json:"toPort,omitempty"`
}

type TrafficMirrorPortRangeRequest struct {
	FromPort *int64 `json:"fromPort,omitempty"`
	ToPort   *int64 `json:"toPort,omitempty"`
}

type TrafficMirrorSession_SDK struct {
	Description            *string `json:"description,omitempty"`
	NetworkInterfaceID     *string `json:"networkInterfaceID,omitempty"`
	OwnerID                *string `json:"ownerID,omitempty"`
	PacketLength           *int64  `json:"packetLength,omitempty"`
	SessionNumber          *int64  `json:"sessionNumber,omitempty"`
	Tags                   []*Tag  `json:"tags,omitempty"`
	TrafficMirrorFilterID  *string `json:"trafficMirrorFilterID,omitempty"`
	TrafficMirrorSessionID *string `json:"trafficMirrorSessionID,omitempty"`
	TrafficMirrorTargetID  *string `json:"trafficMirrorTargetID,omitempty"`
	VirtualNetworkID       *int64  `json:"virtualNetworkID,omitempty"`
}

type TrafficMirrorTarget_SDK struct {
	Description            *string `json:"description,omitempty"`
	NetworkInterfaceID     *string `json:"networkInterfaceID,omitempty"`
	NetworkLoadBalancerARN *string `json:"networkLoadBalancerARN,omitempty"`
	OwnerID                *string `json:"ownerID,omitempty"`
	Tags                   []*Tag  `json:"tags,omitempty"`
	TrafficMirrorTargetID  *string `json:"trafficMirrorTargetID,omitempty"`
	Type                   *string `json:"type_,omitempty"`
}

type TransitGatewayAssociation struct {
	ResourceID                 *string `json:"resourceID,omitempty"`
	ResourceType               *string `json:"resourceType,omitempty"`
	TransitGatewayAttachmentID *string `json:"transitGatewayAttachmentID,omitempty"`
	TransitGatewayRouteTableID *string `json:"transitGatewayRouteTableID,omitempty"`
}

type TransitGatewayAttachment struct {
	CreationTime               *metav1.Time `json:"creationTime,omitempty"`
	ResourceID                 *string      `json:"resourceID,omitempty"`
	ResourceOwnerID            *string      `json:"resourceOwnerID,omitempty"`
	ResourceType               *string      `json:"resourceType,omitempty"`
	State                      *string      `json:"state,omitempty"`
	Tags                       []*Tag       `json:"tags,omitempty"`
	TransitGatewayAttachmentID *string      `json:"transitGatewayAttachmentID,omitempty"`
	TransitGatewayID           *string      `json:"transitGatewayID,omitempty"`
	TransitGatewayOwnerID      *string      `json:"transitGatewayOwnerID,omitempty"`
}

type TransitGatewayAttachmentAssociation struct {
	TransitGatewayRouteTableID *string `json:"transitGatewayRouteTableID,omitempty"`
}

type TransitGatewayAttachmentPropagation struct {
	TransitGatewayRouteTableID *string `json:"transitGatewayRouteTableID,omitempty"`
}

type TransitGatewayMulticastDeregisteredGroupMembers struct {
	DeregisteredNetworkInterfaceIDs []*string `json:"deregisteredNetworkInterfaceIDs,omitempty"`
	GroupIPAddress                  *string   `json:"groupIPAddress,omitempty"`
	TransitGatewayMulticastDomainID *string   `json:"transitGatewayMulticastDomainID,omitempty"`
}

type TransitGatewayMulticastDeregisteredGroupSources struct {
	DeregisteredNetworkInterfaceIDs []*string `json:"deregisteredNetworkInterfaceIDs,omitempty"`
	GroupIPAddress                  *string   `json:"groupIPAddress,omitempty"`
	TransitGatewayMulticastDomainID *string   `json:"transitGatewayMulticastDomainID,omitempty"`
}

type TransitGatewayMulticastDomainAssociation struct {
	ResourceID                 *string `json:"resourceID,omitempty"`
	ResourceType               *string `json:"resourceType,omitempty"`
	TransitGatewayAttachmentID *string `json:"transitGatewayAttachmentID,omitempty"`
}

type TransitGatewayMulticastDomainAssociations struct {
	ResourceID                      *string `json:"resourceID,omitempty"`
	ResourceType                    *string `json:"resourceType,omitempty"`
	TransitGatewayAttachmentID      *string `json:"transitGatewayAttachmentID,omitempty"`
	TransitGatewayMulticastDomainID *string `json:"transitGatewayMulticastDomainID,omitempty"`
}

type TransitGatewayMulticastDomain_SDK struct {
	CreationTime                    *metav1.Time `json:"creationTime,omitempty"`
	State                           *string      `json:"state,omitempty"`
	Tags                            []*Tag       `json:"tags,omitempty"`
	TransitGatewayID                *string      `json:"transitGatewayID,omitempty"`
	TransitGatewayMulticastDomainID *string      `json:"transitGatewayMulticastDomainID,omitempty"`
}

type TransitGatewayMulticastGroup struct {
	GroupIPAddress             *string `json:"groupIPAddress,omitempty"`
	GroupMember                *bool   `json:"groupMember,omitempty"`
	GroupSource                *bool   `json:"groupSource,omitempty"`
	NetworkInterfaceID         *string `json:"networkInterfaceID,omitempty"`
	ResourceID                 *string `json:"resourceID,omitempty"`
	ResourceType               *string `json:"resourceType,omitempty"`
	SubnetID                   *string `json:"subnetID,omitempty"`
	TransitGatewayAttachmentID *string `json:"transitGatewayAttachmentID,omitempty"`
}

type TransitGatewayMulticastRegisteredGroupMembers struct {
	GroupIPAddress                  *string   `json:"groupIPAddress,omitempty"`
	RegisteredNetworkInterfaceIDs   []*string `json:"registeredNetworkInterfaceIDs,omitempty"`
	TransitGatewayMulticastDomainID *string   `json:"transitGatewayMulticastDomainID,omitempty"`
}

type TransitGatewayMulticastRegisteredGroupSources struct {
	GroupIPAddress                  *string   `json:"groupIPAddress,omitempty"`
	RegisteredNetworkInterfaceIDs   []*string `json:"registeredNetworkInterfaceIDs,omitempty"`
	TransitGatewayMulticastDomainID *string   `json:"transitGatewayMulticastDomainID,omitempty"`
}

type TransitGatewayOptions struct {
	AmazonSideASN                  *int64  `json:"amazonSideASN,omitempty"`
	AssociationDefaultRouteTableID *string `json:"associationDefaultRouteTableID,omitempty"`
	AutoAcceptSharedAttachments    *string `json:"autoAcceptSharedAttachments,omitempty"`
	DefaultRouteTableAssociation   *string `json:"defaultRouteTableAssociation,omitempty"`
	DefaultRouteTablePropagation   *string `json:"defaultRouteTablePropagation,omitempty"`
	DNSSupport                     *string `json:"dnsSupport,omitempty"`
	MulticastSupport               *string `json:"multicastSupport,omitempty"`
	PropagationDefaultRouteTableID *string `json:"propagationDefaultRouteTableID,omitempty"`
	VPNEcmpSupport                 *string `json:"vpnEcmpSupport,omitempty"`
}

type TransitGatewayPeeringAttachment_SDK struct {
	AccepterTgwInfo            *PeeringTgwInfo          `json:"accepterTgwInfo,omitempty"`
	CreationTime               *metav1.Time             `json:"creationTime,omitempty"`
	RequesterTgwInfo           *PeeringTgwInfo          `json:"requesterTgwInfo,omitempty"`
	State                      *string                  `json:"state,omitempty"`
	Status                     *PeeringAttachmentStatus `json:"status,omitempty"`
	Tags                       []*Tag                   `json:"tags,omitempty"`
	TransitGatewayAttachmentID *string                  `json:"transitGatewayAttachmentID,omitempty"`
}

type TransitGatewayPrefixListAttachment struct {
	ResourceID                 *string `json:"resourceID,omitempty"`
	ResourceType               *string `json:"resourceType,omitempty"`
	TransitGatewayAttachmentID *string `json:"transitGatewayAttachmentID,omitempty"`
}

type TransitGatewayPrefixListReference_SDK struct {
	Blackhole                  *bool                               `json:"blackhole,omitempty"`
	PrefixListID               *string                             `json:"prefixListID,omitempty"`
	PrefixListOwnerID          *string                             `json:"prefixListOwnerID,omitempty"`
	State                      *string                             `json:"state,omitempty"`
	TransitGatewayAttachment   *TransitGatewayPrefixListAttachment `json:"transitGatewayAttachment,omitempty"`
	TransitGatewayRouteTableID *string                             `json:"transitGatewayRouteTableID,omitempty"`
}

type TransitGatewayPropagation struct {
	ResourceID                 *string `json:"resourceID,omitempty"`
	ResourceType               *string `json:"resourceType,omitempty"`
	TransitGatewayAttachmentID *string `json:"transitGatewayAttachmentID,omitempty"`
	TransitGatewayRouteTableID *string `json:"transitGatewayRouteTableID,omitempty"`
}

type TransitGatewayRequestOptions struct {
	AmazonSideASN                *int64  `json:"amazonSideASN,omitempty"`
	AutoAcceptSharedAttachments  *string `json:"autoAcceptSharedAttachments,omitempty"`
	DefaultRouteTableAssociation *string `json:"defaultRouteTableAssociation,omitempty"`
	DefaultRouteTablePropagation *string `json:"defaultRouteTablePropagation,omitempty"`
	DNSSupport                   *string `json:"dnsSupport,omitempty"`
	MulticastSupport             *string `json:"multicastSupport,omitempty"`
	VPNEcmpSupport               *string `json:"vpnEcmpSupport,omitempty"`
}

type TransitGatewayRouteAttachment struct {
	ResourceID                 *string `json:"resourceID,omitempty"`
	ResourceType               *string `json:"resourceType,omitempty"`
	TransitGatewayAttachmentID *string `json:"transitGatewayAttachmentID,omitempty"`
}

type TransitGatewayRouteTableAssociation struct {
	ResourceID                 *string `json:"resourceID,omitempty"`
	ResourceType               *string `json:"resourceType,omitempty"`
	TransitGatewayAttachmentID *string `json:"transitGatewayAttachmentID,omitempty"`
}

type TransitGatewayRouteTablePropagation struct {
	ResourceID                 *string `json:"resourceID,omitempty"`
	ResourceType               *string `json:"resourceType,omitempty"`
	TransitGatewayAttachmentID *string `json:"transitGatewayAttachmentID,omitempty"`
}

type TransitGatewayRouteTable_SDK struct {
	CreationTime                 *metav1.Time `json:"creationTime,omitempty"`
	DefaultAssociationRouteTable *bool        `json:"defaultAssociationRouteTable,omitempty"`
	DefaultPropagationRouteTable *bool        `json:"defaultPropagationRouteTable,omitempty"`
	State                        *string      `json:"state,omitempty"`
	Tags                         []*Tag       `json:"tags,omitempty"`
	TransitGatewayID             *string      `json:"transitGatewayID,omitempty"`
	TransitGatewayRouteTableID   *string      `json:"transitGatewayRouteTableID,omitempty"`
}

type TransitGatewayRoute_SDK struct {
	DestinationCIDRBlock      *string                          `json:"destinationCIDRBlock,omitempty"`
	PrefixListID              *string                          `json:"prefixListID,omitempty"`
	State                     *string                          `json:"state,omitempty"`
	TransitGatewayAttachments []*TransitGatewayRouteAttachment `json:"transitGatewayAttachments,omitempty"`
	Type                      *string                          `json:"type_,omitempty"`
}

type TransitGatewayVPCAttachmentOptions struct {
	DNSSupport  *string `json:"dnsSupport,omitempty"`
	IPv6Support *string `json:"ipv6Support,omitempty"`
}

type TransitGatewayVPCAttachment_SDK struct {
	CreationTime               *metav1.Time                        `json:"creationTime,omitempty"`
	Options                    *TransitGatewayVPCAttachmentOptions `json:"options,omitempty"`
	State                      *string                             `json:"state,omitempty"`
	SubnetIDs                  []*string                           `json:"subnetIDs,omitempty"`
	Tags                       []*Tag                              `json:"tags,omitempty"`
	TransitGatewayAttachmentID *string                             `json:"transitGatewayAttachmentID,omitempty"`
	TransitGatewayID           *string                             `json:"transitGatewayID,omitempty"`
	VPCID                      *string                             `json:"vpcID,omitempty"`
	VPCOwnerID                 *string                             `json:"vpcOwnerID,omitempty"`
}

type TransitGateway_SDK struct {
	CreationTime      *metav1.Time           `json:"creationTime,omitempty"`
	Description       *string                `json:"description,omitempty"`
	Options           *TransitGatewayOptions `json:"options,omitempty"`
	OwnerID           *string                `json:"ownerID,omitempty"`
	State             *string                `json:"state,omitempty"`
	Tags              []*Tag                 `json:"tags,omitempty"`
	TransitGatewayARN *string                `json:"transitGatewayARN,omitempty"`
	TransitGatewayID  *string                `json:"transitGatewayID,omitempty"`
}

type TunnelOption struct {
	DpdTimeoutAction           *string                                `json:"dpdTimeoutAction,omitempty"`
	DpdTimeoutSeconds          *int64                                 `json:"dpdTimeoutSeconds,omitempty"`
	IkeVersions                []*IKEVersionsListValue                `json:"ikeVersions,omitempty"`
	OutsideIPAddress           *string                                `json:"outsideIPAddress,omitempty"`
	Phase1DHGroupNumbers       []*Phase1DHGroupNumbersListValue       `json:"phase1DHGroupNumbers,omitempty"`
	Phase1EncryptionAlgorithms []*Phase1EncryptionAlgorithmsListValue `json:"phase1EncryptionAlgorithms,omitempty"`
	Phase1IntegrityAlgorithms  []*Phase1IntegrityAlgorithmsListValue  `json:"phase1IntegrityAlgorithms,omitempty"`
	Phase1LifetimeSeconds      *int64                                 `json:"phase1LifetimeSeconds,omitempty"`
	Phase2DHGroupNumbers       []*Phase2DHGroupNumbersListValue       `json:"phase2DHGroupNumbers,omitempty"`
	Phase2EncryptionAlgorithms []*Phase2EncryptionAlgorithmsListValue `json:"phase2EncryptionAlgorithms,omitempty"`
	Phase2IntegrityAlgorithms  []*Phase2IntegrityAlgorithmsListValue  `json:"phase2IntegrityAlgorithms,omitempty"`
	Phase2LifetimeSeconds      *int64                                 `json:"phase2LifetimeSeconds,omitempty"`
	PreSharedKey               *string                                `json:"preSharedKey,omitempty"`
	RekeyFuzzPercentage        *int64                                 `json:"rekeyFuzzPercentage,omitempty"`
	RekeyMarginTimeSeconds     *int64                                 `json:"rekeyMarginTimeSeconds,omitempty"`
	ReplayWindowSize           *int64                                 `json:"replayWindowSize,omitempty"`
	StartupAction              *string                                `json:"startupAction,omitempty"`
	TunnelInsideCIDR           *string                                `json:"tunnelInsideCIDR,omitempty"`
	TunnelInsideIPv6CIDR       *string                                `json:"tunnelInsideIPv6CIDR,omitempty"`
}

type UnsuccessfulInstanceCreditSpecificationItem struct {
	InstanceID *string `json:"instanceID,omitempty"`
}

type UnsuccessfulInstanceCreditSpecificationItemError struct {
	Message *string `json:"message,omitempty"`
}

type UnsuccessfulItem struct {
	ResourceID *string `json:"resourceID,omitempty"`
}

type UnsuccessfulItemError struct {
	Code    *string `json:"code,omitempty"`
	Message *string `json:"message,omitempty"`
}

type UserBucket struct {
	S3Bucket *string `json:"s3Bucket,omitempty"`
	S3Key    *string `json:"s3Key,omitempty"`
}

type UserBucketDetails struct {
	S3Bucket *string `json:"s3Bucket,omitempty"`
	S3Key    *string `json:"s3Key,omitempty"`
}

type UserData struct {
	Data *string `json:"data,omitempty"`
}

type UserIDGroupPair struct {
	Description            *string `json:"description,omitempty"`
	GroupID                *string `json:"groupID,omitempty"`
	GroupName              *string `json:"groupName,omitempty"`
	PeeringStatus          *string `json:"peeringStatus,omitempty"`
	UserID                 *string `json:"userID,omitempty"`
	VPCID                  *string `json:"vpcID,omitempty"`
	VPCPeeringConnectionID *string `json:"vpcPeeringConnectionID,omitempty"`
}

type VGWTelemetry struct {
	AcceptedRouteCount *int64       `json:"acceptedRouteCount,omitempty"`
	CertificateARN     *string      `json:"certificateARN,omitempty"`
	LastStatusChange   *metav1.Time `json:"lastStatusChange,omitempty"`
	OutsideIPAddress   *string      `json:"outsideIPAddress,omitempty"`
	Status             *string      `json:"status,omitempty"`
	StatusMessage      *string      `json:"statusMessage,omitempty"`
}

type VPCAttachment struct {
	State *string `json:"state,omitempty"`
	VPCID *string `json:"vpcID,omitempty"`
}

type VPCCIDRBlockAssociation struct {
	AssociationID  *string            `json:"associationID,omitempty"`
	CIDRBlock      *string            `json:"cidrBlock,omitempty"`
	CIDRBlockState *VPCCIDRBlockState `json:"cidrBlockState,omitempty"`
}

type VPCCIDRBlockState struct {
	State         *string `json:"state,omitempty"`
	StatusMessage *string `json:"statusMessage,omitempty"`
}

type VPCClassicLink struct {
	ClassicLinkEnabled *bool   `json:"classicLinkEnabled,omitempty"`
	Tags               []*Tag  `json:"tags,omitempty"`
	VPCID              *string `json:"vpcID,omitempty"`
}

type VPCEndpointConnection struct {
	CreationTimestamp       *metav1.Time `json:"creationTimestamp,omitempty"`
	DNSEntries              []*DNSEntry  `json:"dnsEntries,omitempty"`
	NetworkLoadBalancerARNs []*string    `json:"networkLoadBalancerARNs,omitempty"`
	ServiceID               *string      `json:"serviceID,omitempty"`
	VPCEndpointID           *string      `json:"vpcEndpointID,omitempty"`
	VPCEndpointOwner        *string      `json:"vpcEndpointOwner,omitempty"`
	VPCEndpointState        *string      `json:"vpcEndpointState,omitempty"`
}

type VPCEndpoint_SDK struct {
	CreationTimestamp   *metav1.Time               `json:"creationTimestamp,omitempty"`
	DNSEntries          []*DNSEntry                `json:"dnsEntries,omitempty"`
	Groups              []*SecurityGroupIdentifier `json:"groups,omitempty"`
	LastError           *LastError                 `json:"lastError,omitempty"`
	NetworkInterfaceIDs []*string                  `json:"networkInterfaceIDs,omitempty"`
	OwnerID             *string                    `json:"ownerID,omitempty"`
	PolicyDocument      *string                    `json:"policyDocument,omitempty"`
	PrivateDNSEnabled   *bool                      `json:"privateDNSEnabled,omitempty"`
	RequesterManaged    *bool                      `json:"requesterManaged,omitempty"`
	RouteTableIDs       []*string                  `json:"routeTableIDs,omitempty"`
	ServiceName         *string                    `json:"serviceName,omitempty"`
	State               *string                    `json:"state,omitempty"`
	SubnetIDs           []*string                  `json:"subnetIDs,omitempty"`
	Tags                []*Tag                     `json:"tags,omitempty"`
	VPCEndpointID       *string                    `json:"vpcEndpointID,omitempty"`
	VPCEndpointType     *string                    `json:"vpcEndpointType,omitempty"`
	VPCID               *string                    `json:"vpcID,omitempty"`
}

type VPCIPv6CIDRBlockAssociation struct {
	AssociationID      *string            `json:"associationID,omitempty"`
	IPv6CIDRBlock      *string            `json:"ipv6CIDRBlock,omitempty"`
	IPv6CIDRBlockState *VPCCIDRBlockState `json:"ipv6CIDRBlockState,omitempty"`
	IPv6Pool           *string            `json:"ipv6Pool,omitempty"`
	NetworkBorderGroup *string            `json:"networkBorderGroup,omitempty"`
}

type VPCPeeringConnectionOptionsDescription struct {
	AllowDNSResolutionFromRemoteVPC            *bool `json:"allowDNSResolutionFromRemoteVPC,omitempty"`
	AllowEgressFromLocalClassicLinkToRemoteVPC *bool `json:"allowEgressFromLocalClassicLinkToRemoteVPC,omitempty"`
	AllowEgressFromLocalVPCToRemoteClassicLink *bool `json:"allowEgressFromLocalVPCToRemoteClassicLink,omitempty"`
}

type VPCPeeringConnectionStateReason struct {
	Code    *string `json:"code,omitempty"`
	Message *string `json:"message,omitempty"`
}

type VPCPeeringConnectionVPCInfo struct {
	CIDRBlock        *string                                 `json:"cidrBlock,omitempty"`
	CIDRBlockSet     []*CIDRBlock                            `json:"cidrBlockSet,omitempty"`
	IPv6CIDRBlockSet []*IPv6CIDRBlock                        `json:"ipv6CIDRBlockSet,omitempty"`
	OwnerID          *string                                 `json:"ownerID,omitempty"`
	PeeringOptions   *VPCPeeringConnectionOptionsDescription `json:"peeringOptions,omitempty"`
	Region           *string                                 `json:"region,omitempty"`
	VPCID            *string                                 `json:"vpcID,omitempty"`
}

type VPCPeeringConnection_SDK struct {
	AccepterVPCInfo        *VPCPeeringConnectionVPCInfo     `json:"accepterVPCInfo,omitempty"`
	ExpirationTime         *metav1.Time                     `json:"expirationTime,omitempty"`
	RequesterVPCInfo       *VPCPeeringConnectionVPCInfo     `json:"requesterVPCInfo,omitempty"`
	Status                 *VPCPeeringConnectionStateReason `json:"status,omitempty"`
	Tags                   []*Tag                           `json:"tags,omitempty"`
	VPCPeeringConnectionID *string                          `json:"vpcPeeringConnectionID,omitempty"`
}

type VPC_SDK struct {
	CIDRBlock                   *string                        `json:"cidrBlock,omitempty"`
	CIDRBlockAssociationSet     []*VPCCIDRBlockAssociation     `json:"cidrBlockAssociationSet,omitempty"`
	DHCPOptionsID               *string                        `json:"dhcpOptionsID,omitempty"`
	InstanceTenancy             *string                        `json:"instanceTenancy,omitempty"`
	IPv6CIDRBlockAssociationSet []*VPCIPv6CIDRBlockAssociation `json:"ipv6CIDRBlockAssociationSet,omitempty"`
	IsDefault                   *bool                          `json:"isDefault,omitempty"`
	OwnerID                     *string                        `json:"ownerID,omitempty"`
	State                       *string                        `json:"state,omitempty"`
	Tags                        []*Tag                         `json:"tags,omitempty"`
	VPCID                       *string                        `json:"vpcID,omitempty"`
}

type VPNConnectionOptions struct {
	EnableAcceleration    *bool           `json:"enableAcceleration,omitempty"`
	LocalIPv4NetworkCIDR  *string         `json:"localIPv4NetworkCIDR,omitempty"`
	LocalIPv6NetworkCIDR  *string         `json:"localIPv6NetworkCIDR,omitempty"`
	RemoteIPv4NetworkCIDR *string         `json:"remoteIPv4NetworkCIDR,omitempty"`
	RemoteIPv6NetworkCIDR *string         `json:"remoteIPv6NetworkCIDR,omitempty"`
	StaticRoutesOnly      *bool           `json:"staticRoutesOnly,omitempty"`
	TunnelInsideIPVersion *string         `json:"tunnelInsideIPVersion,omitempty"`
	TunnelOptions         []*TunnelOption `json:"tunnelOptions,omitempty"`
}

type VPNConnectionOptionsSpecification struct {
	EnableAcceleration    *bool                            `json:"enableAcceleration,omitempty"`
	LocalIPv4NetworkCIDR  *string                          `json:"localIPv4NetworkCIDR,omitempty"`
	LocalIPv6NetworkCIDR  *string                          `json:"localIPv6NetworkCIDR,omitempty"`
	RemoteIPv4NetworkCIDR *string                          `json:"remoteIPv4NetworkCIDR,omitempty"`
	RemoteIPv6NetworkCIDR *string                          `json:"remoteIPv6NetworkCIDR,omitempty"`
	StaticRoutesOnly      *bool                            `json:"staticRoutesOnly,omitempty"`
	TunnelInsideIPVersion *string                          `json:"tunnelInsideIPVersion,omitempty"`
	TunnelOptions         []*VPNTunnelOptionsSpecification `json:"tunnelOptions,omitempty"`
}

type VPNConnection_SDK struct {
	Category                     *string               `json:"category,omitempty"`
	CustomerGatewayConfiguration *string               `json:"customerGatewayConfiguration,omitempty"`
	CustomerGatewayID            *string               `json:"customerGatewayID,omitempty"`
	Options                      *VPNConnectionOptions `json:"options,omitempty"`
	Routes                       []*VPNStaticRoute     `json:"routes,omitempty"`
	State                        *string               `json:"state,omitempty"`
	Tags                         []*Tag                `json:"tags,omitempty"`
	TransitGatewayID             *string               `json:"transitGatewayID,omitempty"`
	Type                         *string               `json:"type_,omitempty"`
	VGWTelemetry                 []*VGWTelemetry       `json:"vgwTelemetry,omitempty"`
	VPNConnectionID              *string               `json:"vpnConnectionID,omitempty"`
	VPNGatewayID                 *string               `json:"vpnGatewayID,omitempty"`
}

type VPNGateway_SDK struct {
	AmazonSideASN    *int64           `json:"amazonSideASN,omitempty"`
	AvailabilityZone *string          `json:"availabilityZone,omitempty"`
	State            *string          `json:"state,omitempty"`
	Tags             []*Tag           `json:"tags,omitempty"`
	Type             *string          `json:"type_,omitempty"`
	VPCAttachments   []*VPCAttachment `json:"vpcAttachments,omitempty"`
	VPNGatewayID     *string          `json:"vpnGatewayID,omitempty"`
}

type VPNStaticRoute struct {
	DestinationCIDRBlock *string `json:"destinationCIDRBlock,omitempty"`
	Source               *string `json:"source,omitempty"`
	State                *string `json:"state,omitempty"`
}

type VPNTunnelOptionsSpecification struct {
	DPDTimeoutAction           *string                                       `json:"dPDTimeoutAction,omitempty"`
	DPDTimeoutSeconds          *int64                                        `json:"dPDTimeoutSeconds,omitempty"`
	IKEVersions                []*IKEVersionsRequestListValue                `json:"iKEVersions,omitempty"`
	Phase1DHGroupNumbers       []*Phase1DHGroupNumbersRequestListValue       `json:"phase1DHGroupNumbers,omitempty"`
	Phase1EncryptionAlgorithms []*Phase1EncryptionAlgorithmsRequestListValue `json:"phase1EncryptionAlgorithms,omitempty"`
	Phase1IntegrityAlgorithms  []*Phase1IntegrityAlgorithmsRequestListValue  `json:"phase1IntegrityAlgorithms,omitempty"`
	Phase1LifetimeSeconds      *int64                                        `json:"phase1LifetimeSeconds,omitempty"`
	Phase2DHGroupNumbers       []*Phase2DHGroupNumbersRequestListValue       `json:"phase2DHGroupNumbers,omitempty"`
	Phase2EncryptionAlgorithms []*Phase2EncryptionAlgorithmsRequestListValue `json:"phase2EncryptionAlgorithms,omitempty"`
	Phase2IntegrityAlgorithms  []*Phase2IntegrityAlgorithmsRequestListValue  `json:"phase2IntegrityAlgorithms,omitempty"`
	Phase2LifetimeSeconds      *int64                                        `json:"phase2LifetimeSeconds,omitempty"`
	PreSharedKey               *string                                       `json:"preSharedKey,omitempty"`
	RekeyFuzzPercentage        *int64                                        `json:"rekeyFuzzPercentage,omitempty"`
	RekeyMarginTimeSeconds     *int64                                        `json:"rekeyMarginTimeSeconds,omitempty"`
	ReplayWindowSize           *int64                                        `json:"replayWindowSize,omitempty"`
	StartupAction              *string                                       `json:"startupAction,omitempty"`
	TunnelInsideCIDR           *string                                       `json:"tunnelInsideCIDR,omitempty"`
	TunnelInsideIPv6CIDR       *string                                       `json:"tunnelInsideIPv6CIDR,omitempty"`
}

type ValidationError struct {
	Code    *string `json:"code,omitempty"`
	Message *string `json:"message,omitempty"`
}

type ValidationWarning struct {
	Errors []*ValidationError `json:"errors,omitempty"`
}

type VolumeDetail struct {
	Size *int64 `json:"size,omitempty"`
}

type VolumeModification struct {
	EndTime            *metav1.Time `json:"endTime,omitempty"`
	ModificationState  *string      `json:"modificationState,omitempty"`
	OriginalIOPS       *int64       `json:"originalIOPS,omitempty"`
	OriginalSize       *int64       `json:"originalSize,omitempty"`
	OriginalVolumeType *string      `json:"originalVolumeType,omitempty"`
	Progress           *int64       `json:"progress,omitempty"`
	StartTime          *metav1.Time `json:"startTime,omitempty"`
	StatusMessage      *string      `json:"statusMessage,omitempty"`
	TargetIOPS         *int64       `json:"targetIOPS,omitempty"`
	TargetSize         *int64       `json:"targetSize,omitempty"`
	TargetVolumeType   *string      `json:"targetVolumeType,omitempty"`
	VolumeID           *string      `json:"volumeID,omitempty"`
}

type VolumeStatusAction struct {
	Code        *string `json:"code,omitempty"`
	Description *string `json:"description,omitempty"`
	EventID     *string `json:"eventID,omitempty"`
	EventType   *string `json:"eventType,omitempty"`
}

type VolumeStatusAttachmentStatus struct {
	InstanceID    *string `json:"instanceID,omitempty"`
	IoPerformance *string `json:"ioPerformance,omitempty"`
}

type VolumeStatusDetails struct {
	Status *string `json:"status,omitempty"`
}

type VolumeStatusEvent struct {
	Description *string      `json:"description,omitempty"`
	EventID     *string      `json:"eventID,omitempty"`
	EventType   *string      `json:"eventType,omitempty"`
	InstanceID  *string      `json:"instanceID,omitempty"`
	NotAfter    *metav1.Time `json:"notAfter,omitempty"`
	NotBefore   *metav1.Time `json:"notBefore,omitempty"`
}

type VolumeStatusItem struct {
	AvailabilityZone *string `json:"availabilityZone,omitempty"`
	OutpostARN       *string `json:"outpostARN,omitempty"`
	VolumeID         *string `json:"volumeID,omitempty"`
}
